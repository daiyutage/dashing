{"version":3,"sources":["dashing.js"],"names":["window","document","undefined","angular","module","run","$templateCache","put","directive","restrict","template","scope","options","data","link","echartScope","$$childHead","$watch","addDataPoints","controller","$scope","$element","$echarts","use","merge","barMinWidth","barMinSpacing","color","colorPalette","line","yAxisSplitNum","yAxisLabelWidth","colors","buildColorStates","height","width","ignoreContainerResizeEvent","tooltip","formatter","tooltipFormatter","tooltipFirstSeriesFormatter","valueFormatter","grid","borderWidth","x","y","x2","y2","xAxis","axisLabel","show","axisLine","axisTick","splitLine","map","item","yAxis","splitNumber","yAxisLabelFormatter","scale","series","makeDataSeries","type","Array","isArray","xAxisDataNum","maxDataNum","gridWidth","allBarVisibleWidth","length","chartMaxWidth","offsetParent","offsetWidth","scrollbarHeight","scrollbarPadding","dataZoom","barWidth","barGap","barCategoryGap","end","Math","floor","zoomLock","parseInt","handleColor","dataBackgroundColor","area","fillerColor","zrender","tool","alpha","echartOptions","makeDataArray","visibleDataPointsNum","ensureArray","obj","array","forEach","datum","dataGrow","xAxisIsTime","isDate","yValue","seriesIndex","params","push","makeDashingTheme","markLine","symbol","title","textStyle","fontSize","fontWeight","fontFamily","loadingText","noDataText","addDataAnimation","replace","initializeDoneCheck","initialized","elem0","prop","style","chart","echarts","init","element","on","resize","$on","off","dispose","setTheme","setOption","isDefined","getOption","newYAxisMaxValue","fillAxisData","hideLoading","currentOption","actualVisibleDataPoints","min","max","dataArray","addData","ex","setOptions","dataPointsQueue","console","warn","message","factory","$filter","$util","buildTooltipSeriesTable","tooltipSeriesColorIndicatorHtml","border","lift","name","value","join","defaultNameFormatter","self","args","result","trigger","axisPointer","borderRadius","showDelay","position","p","guideLineColor","lineStyle","nameFormatter","tooltipAllSeriesFormatter","param","seriesName","timelineTooltip","axisLabelFormatter","unit","hr","toHumanReadable","modifier","lineWidth","stack","smooth","itemStyle","normal","emphasis","hover","areaStyle","showAllSymbol","splitInitialData","visibleDataPoints","older","newer","slice","boundaryGap","size","base","seriesStacked","seriesLineSmooth","showLegend","yAxisShowSplitLine","seriesNames","_","i","borderLineStyle","xAxisType","stacked","titleHeight","legendHeight","text","addLegend","legend","itemWidth","templateUrl","caption","help","current","subText","available","used","textPosition","padding","outerRadius","itemStyleBase","label","labelLine","selectedMode","itemGap","icon","center","radius","round","baseline","subtext","subtextStyle","popup","elem","css","left","top","triggerHandler","filter","millis","compact","isNaN","units","mod","duration","t","unshift","placeholder","ngModel","colorMapperFn","attrs","updateUsageAndClass","usage","usageClass","defaultColorMapperFn","$observe","Number","raw","indexOf","renderer","href","click","location","hasOwnProperty","isObject","object","constant","BUTTON","BYTES","DATETIME","DURATION","INDICATOR","LINK","NUMBER","PROGRESS_BAR","TAG","TEXT","fontClass","shape","condition","colorStyle","conditionToColor","cursorStyle","labelColorClass","conditionToBootstrapLabelClass","PROPERTY_RENDERER","PB","this","props","prototype","values","done","button","bytes","datetime","indicator","number","progressbar","tag","$update","table","key","propNameClass","propValueClass","CB","canSort","overrideSortKey","sortKey","sortDefault","descent","defaultSort","sortDefaultDescent","styleClass","sortBy","multiple","renderers","$check","cols","model","col","keys","pagination","columns","records","search","searchControl","find","val","columnStyleClass","column","addStyleClass","dest","clazz","vertical","multipleRendererColumnsRenderers","require","stTable","stRange","from","to","tableState","start","currentPage","numberOfPages","totalItemCount","stItemsByPage","config","stConfig","sort","skipNatural","transclude","select","tab","reload","tabs","selected","load","addTab","selectTab","activeTabIndex","$http","$controller","$compile","ctrl","createTemplateScope","html","templateScope","$new","scopeController","children","contents","loaded","heading","get","then","response","num","COLORS","blue","purple","green","darkRed","orange","Object","positive","positiveValue","abs","s","e","log","pow"],"mappings":"CAMA,SAAUA,EAAQC,EAAUC,GAC5B,YACAC,SAAQC,OAAO,WACb,yBACA,qBACA,sBACA,mCACA,sBACA,2BACA,sBACA,2BACA,0BACA,kBACA,sBACA,mBACA,yBACA,iBACA,0BACA,oBACA,gCACA,wCACA,gCACA,wCACA,iBACA,iBAGFD,QAAQC,OAAO,WAAWC,KAAK,iBAAkB,SAASC,GAAiBA,EAAeC,IAAI,mCAAmC,mPACjID,EAAeC,IAAI,uBAAuB,iNAC1CD,EAAeC,IAAI,uBAAuB,gVAC1CD,EAAeC,IAAI,+BAA+B,0TAClDD,EAAeC,IAAI,sBAAsB,oFACzCD,EAAeC,IAAI,yBAAyB,uhCAC5CD,EAAeC,IAAI,qBAAqB,wEACxCD,EAAeC,IAAI,uBAAuB,wYAC1CD,EAAeC,IAAI,iBAAiB,gUACpCD,EAAeC,IAAI,4CAA4C,grBAC/DD,EAAeC,IAAI,uDAAuD,6mBAC1ED,EAAeC,IAAI,4CAA4C,ojDAC/DD,EAAeC,IAAI,qBAAqB,+PACxCJ,QAAQC,OAAO,sBACb,2BAECI,UAAU,WAAY,WACrB,OACEC,SAAU,IACVC,SAAU,8CACVC,OACEC,QAAS,eACTC,KAAM,mBAERC,KAAM,SAASH,GACb,GAAII,GAAcJ,EAAMK,WACxBL,GAAMM,OAAO,OAAQ,SAASJ,GACxBA,GACFE,EAAYG,cAAcL,MAIhCM,YAAa,SAAU,WAAY,WAAY,SAASC,EAAQC,EAAUC,GACxE,GAAIC,GAAMpB,QAAQqB,OAChBC,YAAa,GACbC,cAAe,EACfC,MAAOL,EAASM,aAAa,GAAG,GAAGC,KACnCC,cAAe,EACfC,gBAAiB,IAChBX,EAAOR,SACNC,EAAOU,EAAIV,KACXmB,EAASV,EAASW,iBAAiBV,EAAII,OACvCf,GACFsB,OAAQX,EAAIW,OACZC,MAAOZ,EAAIY,MACXC,4BAA4B,EAC5BC,QAASf,EAASe,SAChBC,UAAWf,EAAIgB,kBAAoBjB,EAChCkB,4BAA4BjB,EAAIkB,kBAErCC,KAAMvC,QAAQqB,OACZmB,YAAa,EAAGC,EAAGrB,EAAIQ,gBAAiBc,EAAG,GAAIC,GAAI,EAAGC,GAAI,IACzDxB,EAAImB,MACPM,QACEC,WAAYC,MAAM,GAClBC,UAAWD,MAAM,GACjBE,UAAWF,MAAM,GACjBG,WAAYH,MAAM,GAClBrC,KAAMA,EAAKyC,IAAI,SAASC,GACtB,MAAOA,GAAKX,MAGhBY,QACEC,YAAalC,EAAIO,cACjBuB,WAAYH,MAAM,GAClBC,UAAWD,MAAM,GACjBD,WAAYX,UAAWf,EAAImC,qBAC3BC,MAAOpC,EAAIoC,QAEbC,QAAStC,EAASuC,gBAChB7B,OAAQA,EACR8B,KAAM,MACNjD,KAAMA,EAAKyC,IAAI,SAASC,GACtB,MAAOQ,OAAMC,QAAQT,EAAKV,GAAKU,EAAKV,EAAE,GAAKU,EAAKV,OAGpDoB,aAAc1C,EAAI2C,YAEhBC,EAAuC,EAA3BvD,EAAQ8B,KAAKC,YAAkB/B,EAAQ8B,KAAKE,EAAIhC,EAAQ8B,KAAKI,GACzEsB,EAAqBvD,EAAKwD,QAAU9C,EAAIE,YAAcF,EAAIG,eAAiBH,EAAIG,cAC/E4C,EAAgBjD,EAAS,GAAGkD,aAAaC,WAC7C,IAAIJ,EAAqB,GAAKA,EAAqBD,EAAYG,EAAe,CAC5E,GAAIG,GAAkB,GAClBC,EAAmB,CACvB9D,GAAQ+D,UACNzB,MAAM,EACN0B,SAAUrD,EAAIE,YACdoD,OAAQtD,EAAIG,cACZoD,eAAgBvD,EAAIG,cACpBqD,IAAKC,KAAKC,MAAoC,KAA7BX,EAAgBH,GAAmBC,GACpDc,UAAU,EACVhD,OAAQuC,EACR5B,EAAGsC,SAAS5D,EAAIW,QAAUuC,EAAkBC,EAC5CU,YAAapD,EAAOH,KACpBwD,oBAAqBrD,EAAOsD,KAC5BC,YAAaC,QAAQC,KAAK9D,MAAM+D,MAAM1D,EAAOH,KAAM,KAErDjB,EAAQ8B,KAAKK,IAAM0B,EAAqC,EAAnBC,EAEvCtD,EAAOuE,cAAgB/E,OAK/BT,QAAQC,OAAO,0BACb,iBAECI,UAAU,SAAU,WACf,QAASoF,GAAcC,EAAsBhF,GAC/C,QAASiF,GAAYC,GACnB,MAAOhC,OAAMC,QAAQ+B,GAAOA,GAAOA,GAErC,GAAIC,KAiBJ,OAhBA7F,SAAQ8F,QAAQH,EAAYjF,GAAO,SAASqF,GAC1C,GAAIC,GAAWN,IAAyB,EACpCO,EAAcjG,QAAQkG,OAAOH,EAAMtD,EACvCzC,SAAQ8F,QAAQH,EAAYI,EAAMrD,GAAI,SAASyD,EAAQC,GACrD,GAAIC,EACAJ,GACFI,GAAUD,GAAcL,EAAMtD,EAAG0D,IAAS,EAAOH,IAEjDK,GAAUD,EAAaD,GAAQ,EAAOH,GAClB,IAAhBI,GACFC,EAAOC,KAAKP,EAAMtD,IAGtBoD,EAAMS,KAAKD,OAGRR,EAEL,QAASU,KACX,OACEC,UACEC,QAAS,SAAU,WAErBC,OACEC,WACEC,SAAU,GACVC,WAAY,MACZrF,MAAO,SAGXmF,WACEG,WAAY,iDAEdC,YAAa,kBACbC,WAAY,wBACZC,kBAAkB,GAGtB,OACE3G,SAAU,IACVC,SAAU,cACV2G,SAAS,EACT1G,OACEC,QAAS,KAEXO,YAAa,SAAU,WAAY,WAAY,SAASC,EAAQC,EAAUC,GAoBxE,QAASgG,KACHC,IACF3G,EAAU,MArBd,GAAIA,GAAUQ,EAAOR,QACjB4G,EAAQnG,EAAS,EACrBlB,SAAQ8F,SAAS,QAAS,UAAW,SAASwB,GACxC7G,EAAQ6G,KACVD,EAAME,MAAMD,GAAQ7G,EAAQ6G,KAGhC,IAAIE,GAAQC,QAAQC,KAAKL,EACpB5G,GAAQwB,6BACXjC,QAAQ2H,QAAQ9H,GAAQ+H,GAAG,SAAUJ,EAAMK,QAC3C5G,EAAO6G,IAAI,WAAY,WACrB9H,QAAQ2H,QAAQ9H,GAAQkI,IAAI,SAAUP,EAAMK,QAC5CL,EAAMQ,UACNR,EAAQ,QAGZA,EAAMS,SAAS1B,KACfiB,EAAMU,UAAUzH,GAAS,EACzB,IAAI2G,GAAcpH,QAAQmI,UAAUX,EAAMY,YAAYvF,MAyCtD,IAnCQ5B,EAAOF,cAAgB,SAASL,EAAM2H,GAC5C,GAAK3H,KAASkD,MAAMC,QAAQnD,IAAUA,EAAKwD,QAG3C,IACE,IAAKkD,EAQH,MAPAjG,GAASmH,aAAa7H,EAASmD,MAAMC,QAAQnD,GAAQA,GAAQA,IAC7D8G,EAAMU,UAAUzH,GAAS,GACzB2G,EAAcpH,QAAQmI,UAAUX,EAAMY,YAAYvF,OAC9CuE,GACFI,EAAMe,kBAERpB,IAGF,IAAIqB,GAAgBhB,EAAMY,YACtBK,EAA0BrB,EAAcoB,EAAc/E,OAAO,GAAG/C,KAAKwD,OAAS,EAC9EwB,EAAuBb,KAAK6D,IAC9B,GACA7D,KAAK8D,IAAI,EAAGH,EAAc1E,aAAe2E,IACvCG,EAAYnD,EAAcC,EAAsBhF,EAChDkI,GAAU1E,OAAS,IACjBmE,IAAqBtI,GACvByH,EAAMU,WACJ7E,QAASsF,IAAKN,MACb,GAELb,EAAMqB,QAAQD,IAEhB,MAAOE,MAGX7H,EAAO8H,WAAa,SAAStI,GAC3B+G,EAAMU,UAAUzH,IAEdA,EAAQuI,iBAAmBvI,EAAQuI,gBAAgB9E,OAAQ,CAC7D,IAAKkD,EAKH,WAJA6B,SAAQC,MACNC,QAAS,4EACTzI,KAAMD,EAAQuI,iBAIlB/H,GAAOF,cAAcN,EAAQuI,uBACtBvI,GAAQuI,gBAEjB7B,SAILiC,QAAQ,YAAa,UAAW,QAAS,SAASC,EAASC,GAC1D,QAASC,GAAwB1D,GAC/B,QAAS2D,GAAgChI,GACvC,GAAIiI,GAASpE,QAAQC,KAAK9D,MAAMkI,KAAKlI,GAAQ,GAC7C,OAAO,iGAAmGiI,EAAS,uBAAyBjI,EAAQ,WAEtJ,MAAO,UACLqE,EAAM1C,IAAI,SAASyC,GAKjB,MAJKA,GAAI+D,OACP/D,EAAI+D,KAAO/D,EAAIgE,MACfhE,EAAIgE,MAAQ,IAEP,WACIJ,EAAgC5D,EAAIpE,OAAS,0CACfoE,EAAI+D,KAAO,sCACf/D,EAAIgE,MAAQ,eAEhDC,KAAK,IAAM,WAElB,QAASC,GAAqBH,GAC5B,MAAO3J,SAAQkG,OAAOyD,GACpBN,EAAQ,QAAQM,EAAM,uBAAyBA,EAKnD,GAAII,IACI7H,QAAS,SAAS8H,GACtB,GAAIC,IACFC,QAASF,EAAKE,SAAW,OACzBvD,WAAYC,SAAU,IACtBuD,aAAcxG,KAAM,QACpByG,aAAc,EACdC,UAAW,EACXlI,UAAW6H,EAAK7H,UAChBmI,SAAUN,EAAKM,UAAY,SAASC,GAClC,OAAQA,EAAE,GAAI,KAalB,OAVIP,GAAKQ,iBACPP,EAAOE,aACLxG,KAAM,OACN8G,WACEjJ,MAAOwI,EAAKQ,eACZxI,MAAO,EACP2B,KAAM,YAILsG,GAEH5H,4BAA6B,SAASC,EAAgBoI,GAC1D,MAAO,UAASrE,GACd,GAAIsD,IAAQe,GAAiBZ,GAAsBzD,EAAO,GAAGsD,KAC7D,OAAOA,GACLJ,IACE/H,MAAO6E,EAAO,GAAG5C,OAAO5B,OAAOH,KAC/BiI,KAAMtD,EAAO,GAAG5C,OAAOkG,KACvBC,MAAOtH,EAAiBA,EAAe+D,EAAO,GAAGuD,OAASvD,EAAO,GAAGuD,WAItEe,0BAA2B,SAASrI,EAAgBoI,GACxD,MAAO,UAASrE,GACd,GAAIsD,IAAQe,GAAiBZ,GAAsBzD,EAAO,GAAGsD,KAC7D,OAAOA,GACLJ,EAAwBlD,EAAOlD,IAAI,SAASyH,GAC1C,OACEpJ,MAAOoJ,EAAMnH,OAAO5B,OAAOH,KAC3BiI,KAAMiB,EAAMC,WACZjB,MAAOtH,EAAiBA,EAAesI,EAAMhB,OAASgB,EAAMhB,YAKhEkB,gBAAiB,SAASxI,GAC9B,OACE4H,QAAS,OACT/H,UAAW,SAASkE,GAClB,GAAIsD,GAAOG,EAAqBzD,EAAOuD,MAAM,GAC7C,OAAOD,GACLJ,IACE/H,MAAO6E,EAAO5C,OAAO5B,OAAOH,KAC5BiI,KAAMtD,EAAO5C,OAAOkG,KACpBC,MAAOtH,EAAiBA,EAAe+D,EAAOuD,MAAM,IAAMvD,EAAOuD,MAAM,SAK3EmB,mBAAoB,SAASC,GACjC,MAAO,UAASpB,GACd,GAAc,IAAVA,EAAa,CACf,GAAIqB,GAAK3B,EAAM4B,gBAAgBtB,EAAO,IACtCA,GAAQqB,EAAGrB,MAAQ,IAAMqB,EAAGE,UAAYH,GAAQ,IAElD,MAAOpB,KAGLlG,eAAgB,SAASsG,GAC7BA,EAAKrG,KAAOqG,EAAKrG,MAAQ,MACzB,IAAIyH,GAAYpB,EAAKqB,MAAQ,EAAI,EAC7B5K,GACFgG,OAAQ,SACR6E,OAAQtB,EAAKsB,OACbC,WACEC,QACEhK,MAAOwI,EAAKnI,OAAOH,KACnB+I,WACEjJ,MAAOwI,EAAKnI,OAAOH,KACnBM,MAAOoJ,IAGXK,UACEjK,MAAOwI,EAAKnI,OAAO6J,MACnBjB,WACEjJ,MAAOwI,EAAKnI,OAAOH,KACnBM,MAAOoJ,KAaf,OARIpB,GAAKqB,MACP5K,EAAQ8K,UAAUC,OAAOG,WACvBhI,KAAM,UACNnC,MAAOwI,EAAKnI,OAAOsD,MAEZ6E,EAAK4B,gBACdnL,EAAQ8K,UAAUC,OAAOf,UAAUzI,OAAS,GAEvChC,QAAQqB,MAAM2I,EAAMvJ,IAEvBoL,iBAAkB,SAASnL,EAAMoL,GAIrC,MAHKlI,OAAMC,QAAQnD,KACjBA,MAEEA,EAAKwD,QAAU4H,GACTC,MAAOrL,EAAMsL,WAGrBD,MAAOrL,EAAKuL,MAAM,EAAGH,GACrBE,MAAOtL,EAAKuL,MAAMH,KAGhBxD,aAAc,SAAS7H,EAASC,GACpCV,QAAQ8F,QAAQrF,EAAQgD,OAAQ,SAASA,GACvCA,EAAO/C,UAEqB,SAA1BD,EAAQoC,MAAM,GAAGc,YACZlD,GAAQoC,MAAM,GAAGqJ,kBACjBzL,GAAQoC,MAAM,GAAGnC,KACxBV,QAAQ8F,QAAQpF,EAAM,SAASqF,GAC7B/F,QAAQ8F,QAAQrF,EAAQgD,OAAQ,SAASA,EAAQ2C,GAC/C3C,EAAO/C,KAAK4F,MACVP,EAAMtD,EACNmB,MAAMC,QAAQkC,EAAMrD,GAAKqD,EAAMrD,EAAE0D,GAAeL,EAAMrD,UAI5DjC,EAAQoC,MAAM,GAAGnC,QACjBV,QAAQ8F,QAAQpF,EAAM,SAASqF,GAC7BtF,EAAQoC,MAAM,GAAGnC,KAAK4F,KAAKP,EAAMtD,GACjCzC,QAAQ8F,QAAQrF,EAAQgD,OAAQ,SAASA,EAAQ2C,GAC/C3C,EAAO/C,KAAK4F,KACV1C,MAAMC,QAAQkC,EAAMrD,GAAKqD,EAAMrD,EAAE0D,GAAeL,EAAMrD,SAK1DjB,aAAc,SAAS0K,GAC3B,MAAO7C,GAAM7H,aAAa0K,GAAMhJ,IAAI,SAASiJ,GAC3C,MAAOrC,GAAKjI,iBAAiBsK,MAG3BtK,iBAAkB,SAASsK,GAC/B,OACE1K,KAAM0K,EACNjH,KAAME,QAAQC,KAAK9D,MAAMkI,KAAK0C,GAAO,KACrCV,MAAOrG,QAAQC,KAAK9D,MAAMkI,KAAK0C,EAAM,MAI3C,OAAOrC,MAGX/J,QAAQC,OAAO,uBACb,2BAECI,UAAU,YAAa,WACtB,OACEC,SAAU,IACVC,SAAU,0DACVC,OACEC,QAAS,eACTC,KAAM,mBAERC,KAAM,SAASH,GACb,GAAII,GAAcJ,EAAMK,WACxBL,GAAMM,OAAO,OAAQ,SAASJ,GACxBA,GACFE,EAAYG,cAAcL,MAIhCM,YAAa,SAAU,WAAY,SAASC,EAAQE,GAClD,GAAIC,GAAMpB,QAAQqB,OAChBgL,eAAe,EACfC,kBAAkB,EAClBC,YAAY,EACZ5K,cAAe,EACf6K,oBAAoB,EACpB5K,gBAAiB,IAChBX,EAAOR,SACNC,EAAOS,EAAS0K,iBAAiBzK,EAAIV,MAAQO,EAAOP,KAAMU,EAAI2C,WAC7D3C,GAAIqL,cACPxD,QAAQC,KAAK,iCACb9H,EAAIqL,YAAc/L,EAAKqL,MAAM,GAAGrJ,EAAES,IAAI,SAASuJ,EAAGC,GAChD,MAAO,WAAaA,EAAI,KAG5B,IAAI9K,GAASV,EAASM,aAAaL,EAAIqL,YAAYvI,QAC/C0I,GACFnC,WACEzI,MAAO,EACPR,MAAO,QAGXJ,GAAIwK,cAAgBxK,EAAIwK,eAAoC,SAAlBxK,EAAIyL,UAC9CzL,EAAI0L,QAAU1L,EAAI0L,SAA8B,SAAlB1L,EAAIyL,SAClC,IAAIpM,IACFsB,OAAQX,EAAIW,OACZC,MAAOZ,EAAIY,MACXE,QAASf,EAASe,SAChBsI,eAAgB,mBAChBrI,UAAWf,EAAIgB,kBAAoBjB,EAChCwJ,0BAA0BvJ,EAAIkB,kBAEnCkC,UAAWzB,MAAM,GACjBR,KAAMvC,QAAQqB,OACZmB,YAAa,EAAGC,EAAGrB,EAAIQ,gBAAiBc,EAAG,GAAIC,GAAI,EAAGC,GAAI,IACzDxB,EAAImB,MACPM,QACEc,KAAMvC,EAAIyL,UACVX,aAAa,EACblJ,SAAU4J,EACV3J,SAAU2J,EACV9J,WAAYC,MAAM,GAClBG,WAAW,IAEbG,QACEC,YAAalC,EAAIO,cACjBuB,WAAYH,KAAM3B,EAAIoL,oBACtBxJ,UAAU,EACVF,WAAYX,UAAWf,EAAImC,qBAC3BC,MAAOpC,EAAIoC,QAEbC,UACAjC,MAAOJ,EAAIqL,YAAYtJ,IAAI,SAASuJ,EAAGC,GACrC,MAAO9K,GAAO8K,EAAI9K,EAAOqC,QAAQxC,OAEnCoC,aAAc1C,EAAI2C,WAClBiF,gBAAiBtI,EAAKsL,MAExBhM,SAAQ8F,QAAQ1E,EAAIqL,YAAa,SAAS9C,EAAMgD,GAC9ClM,EAAQgD,OAAO6C,KACbnF,EAASuC,gBACPiG,KAAMA,EACN9H,OAAQA,EAAO8K,EAAI9K,EAAOqC,QAC1BmH,MAAOjK,EAAIiL,cACXf,OAAQlK,EAAIkL,iBACZV,cAAexK,EAAIwK,mBAIzBzK,EAASmH,aAAa7H,EAASC,EAAKqL,OACd,SAAlB3K,EAAIyL,YACNpM,EAAQyB,QAAUf,EAAS2J,gBAAgB1J,EAAIkB,iBAEnB,IAA1B7B,EAAQgD,OAAOS,SACjBzD,EAAQ4C,MAAM6I,aAAe,EAAG,KAElC,IAAIa,GAAc,GACdC,EAAe,EACf5L,GAAIsF,QACNjG,EAAQiG,OACNuG,KAAM7L,EAAIsF,MACVjE,EAAG,EACHC,EAAG,GAELjC,EAAQ8B,KAAKG,GAAKqK,EAEpB,IAAIG,GAAYzM,EAAQgD,OAAOS,OAAS,GAAK9C,EAAImL,UAC7CW,KACFzM,EAAQ0M,QACNpK,MAAM,EACNqK,UAAW,EACX1M,SAEFV,QAAQ8F,QAAQrF,EAAQgD,OAAQ,SAASA,GACvChD,EAAQ0M,OAAOzM,KAAK4F,KAAK7C,EAAOkG,QAElClJ,EAAQ0M,OAAOzK,EAAI,EACftB,EAAIsF,QACNjG,EAAQ0M,OAAOzK,GAAKqK,EACpBtM,EAAQ8B,KAAKG,GAAKsK,KAGlBE,GAAa9L,EAAIsF,SACnBjG,EAAQ8B,KAAKG,GAAK,IAEpBzB,EAAOuE,cAAgB/E,OAK/BT,QAAQC,OAAO,oCACb,2BACA,oBAECI,UAAU,0BAA2B,WACpC,OACEC,SAAU,IACV+M,YAAa,mCACb7M,OACE8M,QAAS,IACTC,KAAM,IACNC,QAAS,IACTxC,KAAM,IACNyC,QAAS,IACThN,QAAS,eACTC,KAAM,sBAKdV,QAAQC,OAAO,uBACb,2BAECI,UAAU,YAAa,WACtB,OACEC,SAAU,IACVC,SAAU,8CACVC,OACEC,QAAS,eACTC,KAAM,mBAERC,KAAM,SAASH,GACb,GAAII,GAAcJ,EAAMK,WACxBL,GAAMM,OAAO,OAAQ,SAASJ,GAC5BE,EAAYmI,YACVtF,SACE/C,OACGkJ,MAAOlJ,EAAKgN,UAAU9D,QACtBA,MAAOlJ,EAAKiN,KAAK/D,eAM5B5I,YAAa,SAAU,WAAY,SAASC,EAAQE,GAClD,GAAIC,GAAMpB,QAAQqB,OAChBG,MAAO,kBACPoM,aAAc,SACb3M,EAAOR,SACNC,EAAOU,EAAIV,MAAQO,EAAOP,IACzBA,IACHuI,QAAQC,KAAK,0CAEf,IAAIrH,GAASV,EAASW,iBAAiBV,EAAII,OACvCqM,EAAU,EACVC,GAAe9I,SAAS5D,EAAIW,QAAU,GAAe,EAAV8L,GAAe,EAC1DE,GACFvC,QACEhK,MAAO,mBACPwM,OAAQjL,KAA2B,UAArB3B,EAAIwM,aAA0BtD,SAAU,UACtD2D,WAAYlL,MAAM,KAGlBtC,GACFsB,OAAQX,EAAIW,OACZC,MAAOZ,EAAIY,MACXO,MAAOC,YAAa,GACpBK,QAASE,MAAM,EAAOrC,MAAO,KAC7ByM,QACEe,cAAc,EACdC,QAAS,GACTf,UAAW,GACX1K,EAAG,SACHhC,MAAOA,EAAKiN,KAAKK,MAAOtN,EAAKgN,UAAUM,OAAO7K,IAAI,SAAS6K,GACzD,OAAQrE,KAAMqE,EAAOrH,WAAYE,WAAY,KAAMuH,KAAM,QAG7D3K,SACEE,KAAM,MACN0K,QAAS,MAAOP,EAAcD,GAC9BS,QAASzJ,KAAKC,MAAoB,IAAdgJ,GAAqBA,GACzCpN,OACEiJ,KAAMjJ,EAAKgN,UAAUM,MACrBpE,MAAOlJ,EAAKgN,UAAU9D,MACtB2B,UAAWwC,IAEXpE,KAAMjJ,EAAKiN,KAAKK,MAChBpE,MAAOlJ,EAAKiN,KAAK/D,MACjB2B,UAAWvL,QAAQqB,SAAU0M,GAC3BvC,QAAShK,MAAOK,EAAOH,YAK/B,QAAQN,EAAIwM,cACV,IAAK,QACHnN,EAAQgD,OAAO,GAAG8H,WAChBC,QACEwC,OACE7L,UAAW,WACT,MAAO0C,MAAK0J,MAA+B,IAAzBtN,EAAOP,KAAKiN,KAAK/D,OAC9B3I,EAAOP,KAAKiN,KAAK/D,MAAQ3I,EAAOP,KAAKgN,UAAU9D,QAAU,KAEhEjD,WACEnF,MAAO,OACPoF,SAAU,GACVC,WAAY,IACZ2H,SAAU,YAKlB,MACF,KAAK,QACCpN,EAAIsF,QACNjG,EAAQgD,OAAO,GAAG4K,OAAO,GAAKP,EAAcD,EAC5CpN,EAAQ0M,OAAO1K,EAAIoL,EACnBpN,EAAQiG,OACNuG,KAAMhM,EAAOP,KAAKiN,KAAK/D,OAAS3I,EAAOP,KAAKiN,KAAK3C,MAAQ,IACzDyD,QAASrN,EAAIsF,MACbyH,QAAS,GACT1L,EAA6B,GAAzBqL,EAAcD,GAAeA,EACjCnL,EAAGoL,EAAcD,EAAU,GAC3BlH,WACEC,SAAU,GACVC,WAAY,KAEd6H,cACE9H,SAAU,MAMpB3F,EAAOuE,cAAgB/E,OAK/BT,QAAQC,OAAO,4BACb,2BAECI,UAAU,iBAAkB,WAC3B,OACEC,SAAU,IACVC,SAAU,8CACVC,OACEC,QAAS,eACTC,KAAM,mBAERC,KAAM,SAASH,GACb,GAAII,GAAcJ,EAAMK,WACxBL,GAAMM,OAAO,OAAQ,SAASJ,GACxBA,GACFE,EAAYG,cAAcL,MAIhCM,YAAa,SAAU,WAAY,SAASC,EAAQE,GAClD,GAAIC,GAAMH,EAAOR,QACbC,EAAOS,EAAS0K,iBAAiBzK,EAAIV,MAAQO,EAAOP,KAAMU,EAAI2C,YAC9DlC,EAASV,EAASM,aAAa,GAAG,EACtCL,GAAIwK,cAAgBxK,EAAIwK,eAAoC,SAAlBxK,EAAIyL,UAC9CzL,EAAI0L,QAAU1L,EAAI0L,SAA8B,SAAlB1L,EAAIyL,SAClC,IAAIpM,IACFsB,OAAQX,EAAIW,OACZC,MAAOZ,EAAIY,MACXE,QAASf,EAASe,SAChBC,UAAWf,EAAIgB,kBAAoBjB,EAChCkB,4BAA4BjB,EAAIkB,kBAErCkC,UAAWzB,MAAM,GACjBR,KAAMvC,QAAQqB,OACZmB,YAAa,EAAGC,EAAG,EAAGC,EAAG,EAAGC,GAAI,EAChCC,GAAI,GAAexB,EAAImB,MACzBM,QACEc,KAAMvC,EAAIyL,UACVX,aAAa,EACbpJ,WAAW,EACXI,WAAW,IAEbG,QACE6I,aAAc,EAAG,KACjBnJ,MAAM,EACNS,MAAOpC,EAAIoC,QAEbC,QAAStC,EAASuC,gBAChB7B,OAAQA,EACRwJ,OAAO,KACTvH,aAAc1C,EAAI2C,WAClBiF,gBAAiBtI,EAAKsL,MAExB7K,GAASmH,aAAa7H,EAASC,EAAKqL,OACd,SAAlB3K,EAAIyL,YACNpM,EAAQyB,QAAUf,EAAS2J,gBAAgB1J,EAAIkB,gBAC/C7B,EAAQgD,OAAO,GAAGmI,eAAgB,EAClCnL,EAAQgD,OAAO,GAAG4H,OAAQ,GAE5BpK,EAAOuE,cAAgB/E,OAK/BT,QAAQC,OAAO,uBACb,4BAECmJ,QAAQ,eAAgB,WACvB,OACEuF,MAAO,SAASC,EAAMtE,GACpB,GAAIjD,GAAQrH,QAAQ2H,QAAQiH,EAC5BvH,GAAMwH,KAAKC,KAAMxE,EAAS7H,EAAI,KAAMsM,IAAKzE,EAAS5H,EAAI,OACtD2E,EAAM2H,eAAe,aAK7BhP,QAAQC,OAAO,+BACZgP,OAAO,WAAY,WAClB,MAAO,UAASC,EAAQC,GACtB,GAAI1M,GAAIuC,SAASkK,EAAQ,GACzB,IAAIE,MAAM3M,GACR,MAAOyM,EAWT,KAAK,GATDG,KACDrB,MAAO,MAAOsB,IAAK,MACnBtB,MAAOmB,EAAU,IAAM,QAASG,IAAK,KACrCtB,MAAOmB,EAAU,IAAM,QAASG,IAAK,KACrCtB,MAAOmB,EAAU,IAAM,SAAUG,IAAK,KACtCtB,MAAOmB,EAAU,IAAM,QAASG,IAAK,IACrCtB,MAAOmB,EAAU,IAAM,SAAUG,IAAK,KAErCC,KACK5C,EAAI,EAAGA,EAAI0C,EAAMnL,OAAQyI,IAAK,CACrC,GAAI3B,GAAOqE,EAAM1C,GACb6C,EAAI/M,EAAIuI,EAAKsE,GACP,KAANE,GACFD,EAASE,SAASzB,MAAOhD,EAAKgD,MAAOpE,MAAO4F,IAE9C/M,GAAKA,EAAI+M,GAAKxE,EAAKsE,IAMrB,MAJAC,GAAWA,EAAStD,MAAM,EAAG,GACzBsD,EAASrL,OAAS,GAA2B,QAAtBqL,EAAS,GAAGvB,QACrCuB,GAAYA,EAAS,KAEhBA,EAASpM,IAAI,SAAS6H,GAC3B,MAAOA,GAAKpB,MAAQoB,EAAKgD,QACxBnE,KAAKsF,EAAU,IAAM,YAI9BnP,QAAQC,OAAO,8BAEZI,UAAU,YAAa,WACtB,OACEC,SAAU,IACV+M,YAAa,uBACb7M,OACEkP,YAAa,IACbC,QAAS,QAKjB3P,QAAQC,OAAO,sBACZI,UAAU,UAAW,WACpB,OACEC,SAAU,IACV+M,YAAa,uBACb7M,OACE8M,QAAS,IACTC,KAAM,IACN3D,MAAO,IACPoB,KAAM,IACNyC,QAAS,QAKjBzN,QAAQC,OAAO,0BACZI,UAAU,cAAe,WACxB,OACEC,SAAU,IACV+M,YAAa,+BACb7M,OACEgN,QAAS,IACT7E,IAAK,IACLiH,cAAe,KAEjBjP,KAAM,SAASH,EAAOoO,EAAMiB,GAO1B,QAASC,GAAoBtC,EAAS7E,GACpCnI,EAAMuP,MAAQpH,EAAM,EAAI9D,KAAK0J,MAAgB,IAAVf,EAAgB7E,GAAO,GAC1DnI,EAAMwP,YAAcxP,EAAMoP,cACxBpP,EAAMoP,cAAgBK,GAAsBzP,EAAMuP,OAEtD,QAASE,GAAqBF,GAC5B,MAAO,iBACI,GAARA,EAAa,OAAkB,GAARA,EAAa,UAAY,UAbrDF,EAAMK,SAAS,UAAW,SAAS1C,GACjCsC,EAAoBK,OAAO3C,GAAU2C,OAAON,EAAMlH,QAEpDkH,EAAMK,SAAS,MAAO,SAASvH,GAC7BmH,EAAoBK,OAAON,EAAMrC,SAAU2C,OAAOxH,UAe5D3I,QAAQC,OAAO,0BACb,iBAECI,UAAU,SAAU,QAAS,SAASiJ,GACrC,OACEhJ,SAAU,IACV+M,YAAa,sBACb7M,OACE4P,IAAK,KAEPzP,KAAM,SAASH,EAAOoO,EAAMiB,GAC1BA,EAAMK,SAAS,MAAO,SAASE,GAC7B,GAAiD,MAA5C,OAAQ,KAAKC,QAAQR,EAAgB,UAAW,CACnD,GAAI5E,GAAK3B,EAAM4B,gBAAgBiF,OAAOC,GAAM,KAC5C5P,GAAMoJ,MAAQqB,EAAGrB,MACjBpJ,EAAMwK,KAAOC,EAAGE,SAAW0E,EAAM7E,SAEjCxK,GAAMwK,KAAO6E,EAAM7E,YAO/BhL,QAAQC,OAAO,oBACb,2BAECI,UAAU,WAAY,WACrB,OACEC,SAAU,IACV+M,YAAa,yBACbnG,SAAS,EACT1G,OACEoJ,MAAO,aACP0G,SAAU,KAEZtP,YAAa,SAAU,SAASC,GAC9BA,EAAOH,OAAO,QAAS,SAAS8I,GAC9B,GAAIA,EAAO,CACT,OAAQ3I,EAAOqP,UACb,IAAK,OACE1G,EAAM2G,OACTtP,EAAOsP,KAAO3G,EAAMqD,KAEtB,MACF,KAAK,SACCrD,EAAM2G,OAAS3G,EAAM4G,QACvBvP,EAAOuP,MAAQ,WACbC,SAASF,KAAO3G,EAAM2G,MAG1B,MACF,KAAK,QACH,IAAK3G,EAAM8G,eAAe,OAExB,YADAzP,EAAOmP,IAAMxG,GAKf5J,QAAQ2Q,SAAS/G,KACfA,EAAM8G,eAAe,WACvBzH,QAAQC,MAAMC,QAAS,wDAAyDyH,OAAQhH,UACjFA,GAAMA,OAEf5J,QAAQqB,MAAMJ,EAAQ2I,YAO/BiH,SAAS,qBACVC,OAAQ,SACRC,MAAO,QACPC,SAAU,WACVC,SAAU,WACVC,UAAW,YACXC,KAAM,OACNC,OAAQ,SACRC,aAAc,cACdC,IAAK,MACLC,KAAMxR,IAEVC,QAAQC,OAAO,kBACb,2BAECI,UAAU,SAAU,WACnB,OACEC,SAAU,IACV+M,YAAa,qBACb7M,OACE0B,QAAS,KAEXvB,KAAM,SAASH,EAAOoO,EAAMiB,GAC1B,OAAQA,EAAMlM,MACZ,IAAK,OACHnD,EAAMgR,UAAY,+BAClB,MACF,KAAK,UACHhR,EAAMgR,UAAY,sCAClB,MACF,SACEhR,EAAMgR,UAAY,yCAO9BxR,QAAQC,OAAO,2BACb,eACA,2BAECI,UAAU,aAAc,QAAS,SAASiJ,GACzC,OACEhJ,SAAU,IACV+M,YAAa,uBACb7M,OACE0B,QAAS,IACTuP,MAAO,KAET9Q,KAAM,SAASH,EAAOoO,EAAMiB,GACrBA,EAAM6B,YACT7B,EAAM6B,UAAY,IAEZ7B,EAAMK,SAAS,YAAa,SAASwB,GAC3ClR,EAAMmR,WAAarI,EAAMsI,iBAAiBF,KAEpC7B,EAAMK,SAAS,UAAW,SAAShO,GACzC1B,EAAMqR,YAAc3P,EAAU,UAAY,iBAMpDlC,QAAQC,OAAO,qBACb,eACA,2BAECI,UAAU,OAAQ,QAAS,SAASiJ,GACnC,OACEhJ,SAAU,IACV+M,YAAa,iBACb7M,OACE+P,KAAM,IACNtD,KAAM,IACN/K,QAAS,KAEXvB,KAAM,SAASH,EAAOoO,EAAMiB,GACrBA,EAAM6B,YACT7B,EAAM6B,UAAY,IAEZ7B,EAAMK,SAAS,YAAa,SAASwB,GAC3ClR,EAAMsR,gBAAkBxI,EAAMyI,+BAA+BL,KAEvD7B,EAAMK,SAAS,UAAW,SAAShO,GACpC1B,EAAM+P,OACT/P,EAAMqR,YAAc3P,EAAU,UAAY,kBAOtDlC,QAAQC,OAAO,4CACZmJ,QAAQ,yBAA0B,oBACjC,SAAS4I,GACP,GAAIC,GAAK,SAAS3B,EAAU5J,GAC1BwL,KAAKC,MAAQ7B,GAAYA,SAAUA,MAC/B5J,GACFwL,KAAKxL,MAAMA,GA0Bf,OAvBAuL,GAAGG,UAAU1L,MAAQ,SAASA,GAE5B,MADAwL,MAAKC,MAAMxI,KAAOjD,EACXwL,MAETD,EAAGG,UAAU7E,KAAO,SAASA,GAE3B,MADA2E,MAAKC,MAAM5E,KAAOA,EACX2E,MAETD,EAAGG,UAAUxI,MAAQ,SAASA,GAE5B,MADAsI,MAAKC,MAAMvI,MAAQA,EACZsI,MAETD,EAAGG,UAAUC,OAAS,SAASA,GAM7B,MALKzO,OAAMC,QAAQwO,KACjBpJ,QAAQC,KAAK,2BACbmJ,GAAUA,IAEZH,KAAKC,MAAME,OAASA,EACbH,MAETD,EAAGG,UAAUE,KAAO,WAClB,MAAOJ,MAAKC,QAGZI,OAAQ,SAAS7L,GACf,MAAO,IAAIuL,GAAGD,EAAkBlB,OAAQpK,IAE1C8L,MAAO,SAAS9L,GACd,MAAO,IAAIuL,GAAGD,EAAkBjB,MAAOrK,IAEzC+L,SAAU,SAAS/L,GACjB,MAAO,IAAIuL,GAAGD,EAAkBhB,SAAUtK,IAE5C6I,SAAU,SAAS7I,GACjB,MAAO,IAAIuL,GAAGD,EAAkBf,SAAUvK,IAE5CgM,UAAW,SAAShM,GAClB,MAAO,IAAIuL,GAAGD,EAAkBd,UAAWxK,IAE7C/F,KAAM,SAAS+F,GACb,MAAO,IAAIuL,GAAGD,EAAkBb,KAAMzK,IAExCiM,OAAQ,SAASjM,GACf,MAAO,IAAIuL,GAAGD,EAAkBZ,OAAQ1K,IAE1CkM,YAAa,SAASlM,GACpB,MAAO,IAAIuL,GAAGD,EAAkBX,aAAc3K,IAEhDmM,IAAK,SAASnM,GACZ,MAAO,IAAIuL,GAAGD,EAAkBV,IAAK5K,IAEvCuG,KAAM,SAASvG,GACb,MAAO,IAAIuL,GAAGD,EAAkBT,KAAM7K,IAEhCoM,QAAS,SAASC,EAAOV,GAC/BrS,QAAQ8F,QAAQuM,EAAQ,SAASzI,EAAOoJ,GACtCD,EAAMC,GAAKpP,MAAMC,QAAQ+F,GAAS,SAAW,SAAWA,SAMpE5J,QAAQC,OAAO,oCACZI,UAAU,gBAAiB,WAC1B,OACEC,SAAU,IACV+M,YAAa,4CACb7M,OACE8M,QAAS,IACT6E,MAAO,aACPc,cAAe,IACfC,eAAgB,QAKxBlT,QAAQC,OAAO,yCACb,qBAECmJ,QAAQ,yBAA0B,oBACjC,SAAS4I,GACP,GAAImB,GAAK,SAAS7C,EAAU5J,GAC1BwL,KAAKC,MAAQ7B,GAAYA,SAAUA,MAC/B5J,GACFwL,KAAKxL,MAAMA,GAsEf,OAnEAyM,GAAGf,UAAU1L,MAAQ,SAASA,GAE5B,MADAwL,MAAKC,MAAMxI,KAAOjD,EACXwL,MAETiB,EAAGf,UAAUY,IAAM,SAASA,GAE1B,MADAd,MAAKC,MAAMa,IAAMA,EACVd,MAETiB,EAAGf,UAAUgB,QAAU,SAASC,GAC9B,IAAKA,IAAoBnB,KAAKC,MAAMa,IAElC,WADA/J,SAAQC,KAAK,iDAIf,IADAgJ,KAAKC,MAAMmB,QAAUD,GAAmBnB,KAAKC,MAAMa,IAC/Cd,KAAKC,MAAMmB,UAAYpB,KAAKC,MAAMa,IACpC,OAAQd,KAAKC,MAAM7B,UACjB,IAAK0B,GAAkBb,KACrBe,KAAKC,MAAMmB,SAAW,OACtB,MACF,KAAKtB,GAAkBd,UACvB,IAAKc,GAAkBV,IACrBY,KAAKC,MAAMmB,SAAW,YACtB,MACF,KAAKtB,GAAkBX,aACrBa,KAAKC,MAAMmB,SAAW,QACtB,MACF,KAAKtB,GAAkBjB,MACrBmB,KAAKC,MAAMmB,SAAW,MACtB,MACF,KAAKtB,GAAkBlB,OAErB,WADA7H,SAAQC,KAAK,gCAKnB,MAAOgJ,OAETiB,EAAGf,UAAUmB,YAAc,SAASC,GAClC,MAAKtB,MAAKC,MAAMmB,SAIhBpB,KAAKC,MAAMsB,YAAcD,EAAU,WAAY,EACxCtB,UAJLjJ,SAAQC,KAAK,mDAMjBiK,EAAGf,UAAUsB,mBAAqB,WAChC,MAAOxB,MAAKqB,aAAY,IAE1BJ,EAAGf,UAAUuB,WAAa,SAASA,GAEjC,MADAzB,MAAKC,MAAMwB,WAAaA,EACjBzB,MAETiB,EAAGf,UAAUwB,OAAS,SAASN,GAE7B,MADApB,MAAKC,MAAMmB,QAAUA,EACdpB,MAETiB,EAAGf,UAAUpH,KAAO,SAASA,GAE3B,MADAkH,MAAKC,MAAMnH,KAAOA,EACXkH,MAETiB,EAAGf,UAAU7E,KAAO,SAASA,GAE3B,MADA2E,MAAKC,MAAM5E,KAAOA,EACX2E,MAETiB,EAAGf,UAAUE,KAAO,WAClB,MAAOJ,MAAKC,QAGZI,OAAQ,SAAS7L,GACf,MAAO,IAAIyM,GAAGnB,EAAkBlB,OAAQpK,IAE1C8L,MAAO,SAAS9L,GACd,MAAO,IAAIyM,GAAGnB,EAAkBjB,MAAOrK,IAEzC+L,SAAU,SAAS/L,GACjB,MAAO,IAAIyM,GAAGnB,EAAkBhB,SAAUtK,IAE5C6I,SAAU,SAAS7I,GACjB,MAAO,IAAIyM,GAAGnB,EAAkBf,SAAUvK,IAE5CgM,UAAW,SAAShM,GAClB,MAAO,IAAIyM,GAAGnB,EAAkBd,UAAWxK,IAE7C/F,KAAM,SAAS+F,GACb,MAAO,IAAIyM,GAAGnB,EAAkBb,KAAMzK,IAExCmN,SAAU,SAASnN,EAAOoN,GACxB,MAAO,IAAIX,GAAGW,EAAWpN,IAE3BiM,OAAQ,SAASjM,GACf,MAAO,IAAIyM,GAAGnB,EAAkBZ,OAAQ1K,IAE1CkM,YAAa,SAASlM,GACpB,MAAO,IAAIyM,GAAGnB,EAAkBX,aAAc3K,IAEhDmM,IAAK,SAASnM,GACZ,MAAO,IAAIyM,GAAGnB,EAAkBV,IAAK5K,IAEvCuG,KAAM,SAASvG,GACb,MAAO,IAAIyM,GAAGnB,EAAkBT,KAAM7K,IAEhCqN,OAAQ,SAASC,EAAMC,GAC7BjU,QAAQ8F,QAAQkO,EAAM,SAASE,GAC7B,GAAIC,GAAOvQ,MAAMC,QAAQqQ,EAAIlB,KAAOkB,EAAIlB,KAAOkB,EAAIlB,IACnDhT,SAAQ8F,QAAQqO,EAAM,SAASnB,GACxBiB,EAAMvD,eAAesC,IACxB/J,QAAQC,KAAK,sDAAwDgL,EAAM,eAQ3FlU,QAAQC,OAAO,iCACb,gBAECI,UAAU,gBAAiB,WAC1B,OACEC,SAAU,IACV+M,YAAa,4CACb7M,OACE8M,QAAS,IACT8G,WAAY,IACZC,QAAS,eACTC,QAAS,eACTC,OAAQ,eAEV5T,KAAM,SAASH,EAAOoO,GACpB,GAAI4F,GAAgB5F,EAAK6F,KAAK,SAAS,EACvCjU,GAAMM,OAAO,SAAU,SAAS4T,GAC9BF,EAAc5K,MAAQ8K,GAAO,GAC7B1U,QAAQ2H,QAAQ6M,GAAexF,eAAe,WAEhDxO,EAAMM,OAAO,UAAW,SAASuT,GAC/B,MAAKzQ,OAAMC,QAAQwQ,IAInB7T,EAAMmU,iBAAmBN,EAAQlR,IAAI,SAASyR,GAC5C,QAASC,GAAcC,EAAMC,EAAOrD,GAC9BA,GACFoD,EAAKxO,KAAKyO,GAGd,GAAIlP,KAIJ,OAHAgP,GAAchP,EAAO+O,EAAOjB,WAAYiB,EAAOjB,aAAe5T,GAC9D8U,EAAchP,EAAO,aAAc,WAAa+O,EAAOtE,UACvDuE,EAAchP,EAAO,cAAejC,MAAMC,QAAQ+Q,EAAO5B,OAAS4B,EAAOI,UAClEnP,EAAMgE,KAAK,YAEpBrJ,EAAMyU,iCAAmCZ,EAAQlR,IAAI,SAASyR,GAC5D,MAAKhR,OAAMC,QAAQ+Q,EAAO5B,KAGtBpP,MAAMC,QAAQ+Q,EAAOtE,WACnBsE,EAAOtE,SAASpM,SAAW0Q,EAAO5B,IAAI9O,QACxC+E,QAAQC,KAAK,mEAER0L,EAAOtE,UAETsE,EAAO5B,IAAI7P,IAAI,WACpB,MAAOyR,GAAOtE,WATP,aAjBTrH,SAAQC,KAAK,wDA8BjB1I,EAAMqD,QAAUD,MAAMC,YAI3BxD,UAAU,YAAa,WACtB,OACE6U,QAAS,WACT3U,SAAU,8EACVI,KAAM,SAASH,EAAOmH,EAASkI,EAAOsF,GACpC3U,EAAM4U,SACJC,KAAM,KACNC,GAAI,MAEN9U,EAAMM,OAAO,cAAe,WAC1B,GAAIsT,GAAae,EAAQI,aAAanB,UACtC5T,GAAM4U,QAAQC,KAAOjB,EAAWoB,MAAQ,EACxChV,EAAM4U,QAAQE,GAAK9U,EAAMiV,cAAgBrB,EAAWsB,cAClDtB,EAAWuB,eAAkBnV,EAAM4U,QAAQC,KAAO7U,EAAMoV,cAAgB,QAKjFC,QAAQ,WAAY,SAASC,GAC5BA,EAASC,KAAKC,aAAc,KAGhChW,QAAQC,OAAO,qBACZI,UAAU,UAAW,WACpB,OACEC,SAAU,IACV+M,YAAa,qBACb4I,YAAY,EACZzV,OAAO,EACPQ,YAAa,SAAU,SAASC,GAE9B,QAASiV,GAAOC,EAAKC,GACnBpW,QAAQ8F,QAAQuQ,EAAM,SAASjT,GAC7BA,EAAKkT,SAAWlT,IAAS+S,IAEvBA,EAAII,OAASxW,GACfoW,EAAII,KAAKH,GANb,GAAIC,GAAOpV,EAAOoV,OASlBnE,MAAKsE,OAAS,SAASL,GACrBE,EAAK/P,KAAK6P,GACU,IAAhBE,EAAKnS,QACPgS,EAAOC,IAGXlV,EAAOwV,UAAY,SAASC,EAAgBN,GACtCM,GAAkB,GAAKA,EAAiBL,EAAKnS,QAC/CgS,EAAOG,EAAKK,GAAiBN,UAMtC/V,UAAU,OAAQ,QAAS,cAAe,WACzC,SAASsW,EAAOC,EAAaC,GAC3B,OACEvW,SAAU,IACV4U,QAAS,UACT3U,SAAU,0EACV2G,SAAS,EACT+O,YAAY,EACZtV,KAAM,SAASH,EAAOoO,EAAMiB,EAAOiH,GAajC,QAASC,GAAoBxW,GAC3BqO,EAAKoI,KAAKzW,EACV,IAAI0W,GAAgBzW,EAAM0W,MAAK,EAC/B,IAAIrH,EAAM7O,WAAY,CACpB,GAAImW,GAAkBP,EAAY/G,EAAM7O,YAAaC,OAAQgW,GAC7DrI,GAAKwI,WAAW1W,KAAK,gBAAiByW,GAExCN,EAASjI,EAAKyI,YAAYJ,GAC1BzW,EAAM8W,QAAS,EApBjB9W,EAAM+W,QAAU1H,EAAM0H,QACtB/W,EAAM8W,QAAS,EACf9W,EAAM+V,KAAO,SAASH,KAChB5V,EAAM8W,QAAWlB,IAGjBvG,EAAMtP,UACRoW,EAAMa,IAAI3H,EAAMtP,UAAUkX,KAAK,SAASC,GACtCX,EAAoBW,EAAShX,SAcnCoW,EAAKN,OAAOhW,QAKtBR,QAAQC,OAAO,mBACZmJ,QAAQ,QAAS,WAChB,OACQ2I,+BAAgC,SAASL,GAC7C,OAAQA,GACN,IAAK,OACH,MAAO,eACT,KAAK,UACH,MAAO,eACT,KAAK,SACH,MAAO,cACT,SACE,MAAO,kBAGPE,iBAAkB,SAASF,GAC/B,OAAQA,GACN,IAAK,OACH,MAAO,SACT,KAAK,UACH,MAAO,SACT,KAAK,SACH,MAAO,SACT,SACE,MAAO,SAGPjQ,aAAc,SAASkW,GAC3B,GAAIC,IACFC,KAAM,iBACNC,OAAQ,mBACRC,MAAO,kBACPC,QAAS,mBACTC,OAAQ,kBAEV,QAAQN,GACN,IAAK,GACH,OAAQC,EAAOC,KACjB,KAAK,GACH,OAAQD,EAAOC,KAAMD,EAAOG,MAC9B,SACE,MAAOG,QAAO/D,KAAKyD,GAAQzU,IAAI,SAAS6P,GACtC,MAAO4E,GAAO5E,OAIhB9H,gBAAiB,SAAStB,EAAOwC,GACrC,GAAIjB,GAAW,EACf,IAAc,IAAVvB,EAAa,CACF,OAATwC,IACFA,EAAO,IAET,IAAI+L,GAAWvO,EAAQ,EACnBwO,EAAgBvT,KAAKwT,IAAIzO,GACzB0O,GAAK,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAC5CC,EAAI1T,KAAKC,MAAMD,KAAK2T,IAAIJ,GAAiBvT,KAAK2T,IAAIpM,GACtDxC,GAAQ/E,KAAKC,MAAMsT,EAAgBvT,KAAK4T,IAAIrM,EAAMmM,IAC7CJ,IACHvO,GAAS,IAEXuB,EAAWmN,EAAEC,GAEf,OAAQ3O,MAAOA,EAAOuB,SAAUA,QAKrCtL,OAAQC","file":"dashing.min.js","sourcesContent":["/*\n * dashing (assembled widgets)\n * @version v0.1.8\n * @link https://github.com/stanleyxu2005/dashing\n * @license Apache License 2.0, see accompanying LICENSE file\n */\n(function(window, document, undefined) {\n'use strict';\nangular.module('dashing', [\n  'dashing.charts.echarts',\n  'dashing.charts.bar',\n  'dashing.charts.line',\n  'dashing.charts.metrics-sparkline',\n  'dashing.charts.ring',\n  'dashing.charts.sparkline',\n  'dashing.contextmenu',\n  'dashing.filters.duration',\n  'dashing.forms.searchbox',\n  'dashing.metrics',\n  'dashing.progressbar',\n  'dashing.property',\n  'dashing.property.bytes',\n  'dashing.remark',\n  'dashing.state.indicator',\n  'dashing.state.tag',\n  'dashing.tables.property-table',\n  'dashing.tables.property-table.builder',\n  'dashing.tables.sortable-table',\n  'dashing.tables.sortable-table.builder',\n  'dashing.tabset',\n  'dashing.util'\n])\n;\nangular.module('dashing').run(['$templateCache', function($templateCache) {$templateCache.put('charts/metrics-sparkline-td.html','<metrics caption=\"{{caption}}\" ng-attr-help=\"{{help}}\" value=\"{{current}}\" unit=\"{{unit}}\" sub-text=\"{{subText}}\" class=\"metrics-thicker-bottom\"> </metrics> <sparkline-chart options-bind=\"options\" datasource-bind=\"data\"> </sparkline-chart>');\n$templateCache.put('forms/searchbox.html','<div class=\"form-group has-feedback\"> <input type=\"text\" class=\"form-control\" ng-model=\"ngModel\" placeholder=\"{{placeholder}}\"> <span class=\"glyphicon glyphicon-search form-control-feedback\"></span> </div>');\n$templateCache.put('metrics/metrics.html','<div class=\"metrics\"> <div> <span class=\"metrics-caption\" ng-bind=\"caption\"></span> <remark ng-if=\"help\" type=\"question\" tooltip=\"{{help}}\"></remark> </div> <h3 class=\"metrics-value\"> <span ng-bind=\"value\"></span> <small ng-bind=\"unit\"></small> </h3> <small ng-if=\"subText\" class=\"metrics-sub-text\" ng-bind=\"subText\"></small> </div>');\n$templateCache.put('progressbar/progressbar.html','<div style=\"width: 100%\">  <span class=\"small pull-left\" ng-bind=\"current+\\'/\\'+max\"></span> <span class=\"small pull-right\" ng-bind=\"usage + \\'%\\'\"></span> </div> <div style=\"width: 100%\" class=\"progress progress-tiny\"> <div ng-style=\"{\\'width\\': usage+\\'%\\'}\" class=\"progress-bar {{usageClass}}\"></div> </div>');\n$templateCache.put('property/bytes.html','<span ng-bind=\"value|number:0\"></span> <span ng-if=\"unit\" ng-bind=\"unit\"></span>');\n$templateCache.put('property/property.html','<ng-switch on=\"renderer\">  <a ng-switch-when=\"Link\" ng-href=\"{{href}}\" ng-bind=\"text\"></a>  <button ng-switch-when=\"Button\" ng-if=\"!hide\" type=\"button\" class=\"btn btn-default {{class}}\" ng-bind=\"text\" ng-click=\"click()\" ng-disabled=\"disabled\" ng-attr-bs-tooltip=\"tooltip\"></button>  <tag ng-switch-when=\"Tag\" text=\"{{text}}\" ng-attr-href=\"{{href}}\" ng-attr-condition=\"{{condition}}\" ng-attr-tooltip=\"{{tooltip}}\"></tag>  <indicator ng-switch-when=\"Indicator\" ng-attr-shape=\"{{shape}}\" ng-attr-condition=\"{{condition}}\" ng-attr-tooltip=\"{{tooltip}}\"></indicator>  <progressbar ng-switch-when=\"ProgressBar\" current=\"{{current}}\" max=\"{{max}}\"></progressbar>  <bytes ng-switch-when=\"Bytes\" raw=\"{{raw}}\" ng-attr-unit=\"{{unit}}\" ng-attr-readable=\"{{readable}}\"></bytes>  <span ng-switch-when=\"Duration\" ng-bind=\"value|duration\"></span>  <span ng-switch-when=\"DateTime\" ng-bind=\"value|date:\\'yyyy-MM-dd HH:mm:ss\\'\"></span>  <span ng-switch-when=\"Number\" ng-bind=\"value|number:0\"></span>  <span ng-switch-default ng-bind=\"value\"></span> </ng-switch>');\n$templateCache.put('remark/remark.html','<span class=\"{{fontClass}} remark-icon\" bs-tooltip=\"tooltip\"></span>');\n$templateCache.put('state/indicator.html','<ng-switch on=\"shape\"> <div ng-switch-when=\"stripe\" ng-style=\"{\\'background-color\\': colorStyle, \\'cursor\\': cursorStyle}\" style=\"display: inline-block; height: 100%; width: 8px\" bs-tooltip=\"tooltip\" placement=\"right auto\"></div> <span ng-switch-default ng-style=\"{\\'color\\': colorStyle, \\'cursor\\': cursorStyle}\" class=\"glyphicon glyphicon-stop\" bs-tooltip=\"tooltip\"></span> </ng-switch>');\n$templateCache.put('state/tag.html','<ng-switch on=\"!href\"> <a ng-switch-when=\"false\" ng-href=\"{{href}}\" class=\"label label-lg {{labelColorClass}}\" ng-bind=\"text\" bs-tooltip=\"tooltip\"></a> <span ng-switch-when=\"true\" class=\"label label-lg {{labelColorClass}}\" ng-style=\"{\\'cursor\\': cursorStyle}\" ng-bind=\"text\" bs-tooltip=\"tooltip\"></span> </ng-switch>');\n$templateCache.put('tables/property-table/property-table.html','<table class=\"table table-striped table-hover\"> <caption ng-if=\"caption\" ng-bind=\"caption\"></caption> <tbody> <tr ng-repeat=\"prop in props track by $index\"> <td ng-attr-ng-class=\"propNameClass\"> <span ng-bind=\"prop.name\"></span> <remark ng-if=\"prop.help\" type=\"question\" tooltip=\"{{prop.help}}\"></remark> </td> <td ng-attr-ng-class=\"propValueClass\"> <ng-switch on=\"prop.hasOwnProperty(\\'values\\')\"> <property ng-switch-when=\"true\" ng-repeat=\"value in prop.values track by $index\" value-bind=\"value\" renderer=\"{{::prop.renderer}}\"></property> <property ng-switch-when=\"false\" value-bind=\"prop.value\" renderer=\"{{::prop.renderer}}\"></property> </ng-switch> </td> </tr> </tbody> </table>');\n$templateCache.put('tables/sortable-table/sortable-table-pagination.html','<div class=\"pull-left\"> <st-summary></st-summary> </div> <div class=\"pull-right\"> <div ng-if=\"pages.length >= 2\" class=\"btn-group btn-group-xs\">  <button type=\"button\" class=\"btn btn-default\" ng-class=\"{disabled:1==currentPage}\" ng-click=\"selectPage(currentPage-1)\"> &laquo;</button> <button type=\"button\" class=\"btn btn-default\" ng-repeat=\"page in pages track by $index\" ng-class=\"{active:page==currentPage}\" ng-click=\"selectPage(page)\"> {{page}} </button> <button type=\"button\" class=\"btn btn-default\" ng-class=\"{disabled:numPages==currentPage}\" ng-click=\"selectPage(currentPage+1)\"> &raquo;</button>  </div> </div>');\n$templateCache.put('tables/sortable-table/sortable-table.html','<table class=\"table table-striped table-hover\" st-table=\"showing\" st-safe-src=\"records\"> <caption ng-if=\"caption\" ng-bind=\"caption\"></caption> <thead> <tr> <th ng-repeat=\"column in columns track by $index\" class=\"{{::columnStyleClass[$index]}}\" ng-attr-st-sort=\"{{::column.sortKey}}\" ng-attr-st-sort-default=\"{{::column.defaultSort}}\"> <span ng-bind=\"::column.name\"></span> <remark ng-if=\"column.help\" type=\"question\" tooltip=\"{{::column.help}}\"></remark> <span ng-if=\"column.unit\" class=\"unit\" ng-bind=\"column.unit\"></span> </th> </tr> <tr ng-show=\"false\"> <th colspan=\"{{columns.length}}\">  <input type=\"hidden\" st-search>  <div st-pagination st-items-by-page=\"pagination\"></div> </th> </tr> </thead> <tbody> <tr ng-repeat=\"record in showing track by $index\"> <td ng-repeat=\"column in columns track by $index\" class=\"{{columnStyleClass[$index]}}\"> <ng-switch on=\"isArray(column.key)\"> <property ng-switch-when=\"true\" ng-repeat=\"columnKeyChild in column.key track by $index\" value-bind=\"record[columnKeyChild]\" renderer=\"{{multipleRendererColumnsRenderers[$parent.$index][$index]}}\"></property> <property ng-switch-when=\"false\" value-bind=\"record[column.key]\" renderer=\"{{column.renderer}}\"></property> </ng-switch> </td> </tr> <tr ng-if=\"records !== null && !showing.length\"> <td colspan=\"{{columns.length}}\" class=\"text-center\"> <i>No data found</i> </td> </tr> </tbody> <tfoot ng-if=\"records.length\"> <tr> <td colspan=\"{{columns.length}}\" st-pagination st-items-by-page=\"pagination\" st-template=\"tables/sortable-table/sortable-table-pagination.html\"> </td> </tr> </tfoot> </table>');\n$templateCache.put('tabset/tabset.html','<ul class=\"nav nav-tabs nav-tabs-underlined\"> <li ng-repeat=\"tab in tabs track by $index\" ng-class=\"{active:tab.selected}\"> <a href=\"\" ng-click=\"selectTab($index)\" ng-bind=\"tab.heading\"></a> </li> </ul> <div class=\"tab-content\" ng-transclude></div>');}]);\nangular.module('dashing.charts.bar', [\n  'dashing.charts.echarts'\n])\n  .directive('barChart', function() {\n    return {\n      restrict: 'E',\n      template: '<echart options=\"::echartOptions\"></echart>',\n      scope: {\n        options: '=optionsBind',\n        data: '=datasourceBind'\n      },\n      link: function(scope) {\n        var echartScope = scope.$$childHead;\n        scope.$watch('data', function(data) {\n          if (data) {\n            echartScope.addDataPoints(data);\n          }\n        });\n      },\n      controller: ['$scope', '$element', '$echarts', function($scope, $element, $echarts) {\n        var use = angular.merge({\n          barMinWidth: 14,\n          barMinSpacing: 4,\n          color: $echarts.colorPalette(0)[0].line,\n          yAxisSplitNum: 3,\n          yAxisLabelWidth: 60\n        }, $scope.options);\n        var data = use.data;\n        var colors = $echarts.buildColorStates(use.color);\n        var options = {\n          height: use.height,\n          width: use.width,\n          ignoreContainerResizeEvent: true,\n          tooltip: $echarts.tooltip({\n            formatter: use.tooltipFormatter || $echarts\n              .tooltipFirstSeriesFormatter(use.valueFormatter)\n          }),\n          grid: angular.merge({\n            borderWidth: 0, x: use.yAxisLabelWidth, y: 15, x2: 5, y2: 28\n          }, use.grid),\n          xAxis: [{\n            axisLabel: {show: true},\n            axisLine: {show: false},\n            axisTick: {show: false},\n            splitLine: {show: false},\n            data: data.map(function(item) {\n              return item.x;\n            })\n          }],\n          yAxis: [{\n            splitNumber: use.yAxisSplitNum,\n            splitLine: {show: false},\n            axisLine: {show: false},\n            axisLabel: {formatter: use.yAxisLabelFormatter},\n            scale: use.scale\n          }],\n          series: [$echarts.makeDataSeries({\n            colors: colors,\n            type: 'bar',\n            data: data.map(function(item) {\n              return Array.isArray(item.y) ? item.y[0] : item.y;\n            })\n          })],\n          xAxisDataNum: use.maxDataNum\n        };\n        var gridWidth = options.grid.borderWidth * 2 + options.grid.x + options.grid.x2;\n        var allBarVisibleWidth = data.length * (use.barMinWidth + use.barMinSpacing) - use.barMinSpacing;\n        var chartMaxWidth = $element[0].offsetParent.offsetWidth;\n        if (allBarVisibleWidth > 0 && allBarVisibleWidth + gridWidth > chartMaxWidth) {\n          var scrollbarHeight = 20;\n          var scrollbarPadding = 5;\n          options.dataZoom = {\n            show: true,\n            barWidth: use.barMinWidth,\n            barGap: use.barMinSpacing,\n            barCategoryGap: use.barMinSpacing,\n            end: Math.floor((chartMaxWidth - gridWidth) * 100 / allBarVisibleWidth),\n            zoomLock: true,\n            height: scrollbarHeight,\n            y: parseInt(use.height) - scrollbarHeight - scrollbarPadding,\n            handleColor: colors.line,\n            dataBackgroundColor: colors.area,\n            fillerColor: zrender.tool.color.alpha(colors.line, 0.2)\n          };\n          options.grid.y2 += scrollbarHeight + scrollbarPadding * 2;\n        }\n        $scope.echartOptions = options;\n      }]\n    };\n  })\n;\nangular.module('dashing.charts.echarts', [\n  'dashing.util'\n])\n  .directive('echart', function() {\n        function makeDataArray(visibleDataPointsNum, data) {\n      function ensureArray(obj) {\n        return Array.isArray(obj) ? obj : [obj];\n      }\n      var array = [];\n      angular.forEach(ensureArray(data), function(datum) {\n        var dataGrow = visibleDataPointsNum-- > 0;\n        var xAxisIsTime = angular.isDate(datum.x);\n        angular.forEach(ensureArray(datum.y), function(yValue, seriesIndex) {\n          var params;\n          if (xAxisIsTime) {\n            params = [seriesIndex, [datum.x, yValue], false, dataGrow];\n          } else {\n            params = [seriesIndex, yValue, false, dataGrow];\n            if (seriesIndex === 0) {\n              params.push(datum.x);\n            }\n          }\n          array.push(params);\n        });\n      });\n      return array;\n    }\n        function makeDashingTheme() {\n      return {\n        markLine: {\n          symbol: ['circle', 'circle']\n        },\n        title: {\n          textStyle: {\n            fontSize: 14,\n            fontWeight: '400',\n            color: '#000'\n          }\n        },\n        textStyle: {\n          fontFamily: 'lato,roboto,\"helvetica neue\",\"segoe ui\",arial'\n        },\n        loadingText: 'Data Loading...',\n        noDataText: 'No Graphic Data Found',\n        addDataAnimation: false\n      };\n    }\n    return {\n      restrict: 'E',\n      template: '<div></div>',\n      replace: true ,\n      scope: {\n        options: '='\n      },\n      controller: ['$scope', '$element', '$echarts', function($scope, $element, $echarts) {\n        var options = $scope.options;\n        var elem0 = $element[0];\n        angular.forEach(['width', 'height'], function(prop) {\n          if (options[prop]) {\n            elem0.style[prop] = options[prop];\n          }\n        });\n        var chart = echarts.init(elem0);\n        if (!options.ignoreContainerResizeEvent) {\n          angular.element(window).on('resize', chart.resize);\n          $scope.$on('$destroy', function() {\n            angular.element(window).off('resize', chart.resize);\n            chart.dispose();\n            chart = null;\n          });\n        }\n        chart.setTheme(makeDashingTheme());\n        chart.setOption(options, true);\n        var initialized = angular.isDefined(chart.getOption().xAxis);\n        function initializeDoneCheck() {\n          if (initialized) {\n            options = null;\n          }\n        }\n                $scope.addDataPoints = function(data, newYAxisMaxValue) {\n          if (!data || (Array.isArray(data) && !data.length)) {\n            return;\n          }\n          try {\n            if (!initialized) {\n              $echarts.fillAxisData(options, Array.isArray(data) ? data : [data]);\n              chart.setOption(options, true);\n              initialized = angular.isDefined(chart.getOption().xAxis);\n              if (initialized) {\n                chart.hideLoading();\n              }\n              initializeDoneCheck();\n              return;\n            }\n            var currentOption = chart.getOption();\n            var actualVisibleDataPoints = initialized ? currentOption.series[0].data.length : 0;\n            var visibleDataPointsNum = Math.min(\n              80 ,\n              Math.max(0, currentOption.xAxisDataNum - actualVisibleDataPoints));\n            var dataArray = makeDataArray(visibleDataPointsNum, data);\n            if (dataArray.length > 0) {\n              if (newYAxisMaxValue !== undefined) {\n                chart.setOption({\n                  yAxis: [{max: newYAxisMaxValue}]\n                }, false);\n              }\n              chart.addData(dataArray);\n            }\n          } catch (ex) {\n          }\n        };\n        $scope.setOptions = function(options) {\n          chart.setOption(options);\n        };\n        if (options.dataPointsQueue && options.dataPointsQueue.length) {\n          if (!initialized) {\n            console.warn({\n              message: 'Failed to initialize the chart. All data points in queue will be dropped.',\n              data: options.dataPointsQueue\n            });\n            return;\n          }\n          $scope.addDataPoints(options.dataPointsQueue);\n          delete options.dataPointsQueue;\n        }\n        initializeDoneCheck();\n      }]\n    };\n  })\n  .factory('$echarts', ['$filter', '$util', function($filter, $util) {\n    function buildTooltipSeriesTable(array) {\n      function tooltipSeriesColorIndicatorHtml(color) {\n        var border = zrender.tool.color.lift(color, -0.2);\n        return '<div style=\"width: 10px; height: 10px; margin-top: 2px; border-radius: 2px; border: 1px solid ' + border + '; background-color: ' + color + '\"></div>';\n      }\n      return '<table>' +\n        array.map(function(obj) {\n          if (!obj.name) {\n            obj.name = obj.value;\n            obj.value = '';\n          }\n          return '<tr>' +\n            '<td>' + tooltipSeriesColorIndicatorHtml(obj.color) + '</td>' +\n            '<td style=\"padding: 0 12px 0 4px\">' + obj.name + '</td>' +\n            '<td style=\"text-align: right\">' + obj.value + '</td>' +\n            '</tr>';\n        }).join('') + '</table>';\n    }\n    function defaultNameFormatter(name) {\n      return angular.isDate(name) ?\n        $filter('date')(name, 'yyyy-MM-dd HH:mm:ss') : name;\n    }\n    function defaultValueFormatter(value) {\n      return $filter('number')(value);\n    }\n    var self = {\n            tooltip: function(args) {\n        var result = {\n          trigger: args.trigger || 'axis',\n          textStyle: {fontSize: 12},\n          axisPointer: {type: 'none'},\n          borderRadius: 2,\n          showDelay: 0,\n          formatter: args.formatter,\n          position: args.position || function(p) {\n            return [p[0], 22];\n          }\n        };\n        if (args.guideLineColor) {\n          result.axisPointer = {\n            type: 'line',\n            lineStyle: {\n              color: args.guideLineColor,\n              width: 3,\n              type: 'dotted'\n            }\n          };\n        }\n        return result;\n      },\n            tooltipFirstSeriesFormatter: function(valueFormatter, nameFormatter) {\n        return function(params) {\n          var name = (nameFormatter || defaultNameFormatter)(params[0].name);\n          return name +\n            buildTooltipSeriesTable([{\n              color: params[0].series.colors.line,\n              name: params[0].series.name,\n              value: valueFormatter ? valueFormatter(params[0].value) : params[0].value\n            }]);\n        };\n      },\n            tooltipAllSeriesFormatter: function(valueFormatter, nameFormatter) {\n        return function(params) {\n          var name = (nameFormatter || defaultNameFormatter)(params[0].name);\n          return name +\n            buildTooltipSeriesTable(params.map(function(param) {\n              return {\n                color: param.series.colors.line,\n                name: param.seriesName,\n                value: valueFormatter ? valueFormatter(param.value) : param.value\n              };\n            }));\n        };\n      },\n            timelineTooltip: function(valueFormatter) {\n        return {\n          trigger: 'item',\n          formatter: function(params) {\n            var name = defaultNameFormatter(params.value[0]);\n            return name +\n              buildTooltipSeriesTable([{\n                color: params.series.colors.line,\n                name: params.series.name,\n                value: valueFormatter ? valueFormatter(params.value[1]) : params.value[1]\n              }]);\n          }\n        };\n      },\n            axisLabelFormatter: function(unit) {\n        return function(value) {\n          if (value !== 0) {\n            var hr = $util.toHumanReadable(value, 1000);\n            value = hr.value + ' ' + hr.modifier + (unit || '');\n          }\n          return value;\n        };\n      },\n            makeDataSeries: function(args) {\n        args.type = args.type || 'line';\n        var lineWidth = args.stack ? 4 : 3;\n        var options = {\n          symbol: 'circle',\n          smooth: args.smooth,\n          itemStyle: {\n            normal: {\n              color: args.colors.line,\n              lineStyle: {\n                color: args.colors.line,\n                width: lineWidth\n              }\n            },\n            emphasis: {\n              color: args.colors.hover,\n              lineStyle: {\n                color: args.colors.line,\n                width: lineWidth\n              }\n            }\n          }\n        };\n        if (args.stack) {\n          options.itemStyle.normal.areaStyle = {\n            type: 'default',\n            color: args.colors.area\n          };\n        } else if (args.showAllSymbol) {\n          options.itemStyle.normal.lineStyle.width -= 1;\n        }\n        return angular.merge(args, options);\n      },\n            splitInitialData: function(data, visibleDataPoints) {\n        if (!Array.isArray(data)) {\n          data = [];\n        }\n        if (data.length <= visibleDataPoints) {\n          return {older: data, newer: []};\n        }\n        return {\n          older: data.slice(0, visibleDataPoints),\n          newer: data.slice(visibleDataPoints)\n        };\n      },\n            fillAxisData: function(options, data) {\n        angular.forEach(options.series, function(series) {\n          series.data = [];\n        });\n        if (options.xAxis[0].type === 'time') {\n          delete options.xAxis[0].boundaryGap;\n          delete options.xAxis[0].data;\n          angular.forEach(data, function(datum) {\n            angular.forEach(options.series, function(series, seriesIndex) {\n              series.data.push([\n                datum.x,\n                Array.isArray(datum.y) ? datum.y[seriesIndex] : datum.y]);\n            });\n          });\n        } else {\n          options.xAxis[0].data = [];\n          angular.forEach(data, function(datum) {\n            options.xAxis[0].data.push(datum.x);\n            angular.forEach(options.series, function(series, seriesIndex) {\n              series.data.push(\n                Array.isArray(datum.y) ? datum.y[seriesIndex] : datum.y);\n            });\n          });\n        }\n      },\n            colorPalette: function(size) {\n        return $util.colorPalette(size).map(function(base) {\n          return self.buildColorStates(base);\n        });\n      },\n            buildColorStates: function(base) {\n        return {\n          line: base,\n          area: zrender.tool.color.lift(base, -0.92),\n          hover: zrender.tool.color.lift(base, 0.1)\n        };\n      }\n    };\n    return self;\n  }])\n;\nangular.module('dashing.charts.line', [\n  'dashing.charts.echarts'\n])\n  .directive('lineChart', function() {\n    return {\n      restrict: 'E',\n      template: '<echart options=\"::echartOptions\" data=\"data\"></echart>',\n      scope: {\n        options: '=optionsBind',\n        data: '=datasourceBind'\n      },\n      link: function(scope) {\n        var echartScope = scope.$$childHead;\n        scope.$watch('data', function(data) {\n          if (data) {\n            echartScope.addDataPoints(data);\n          }\n        });\n      },\n      controller: ['$scope', '$echarts', function($scope, $echarts) {\n        var use = angular.merge({\n          seriesStacked: true,\n          seriesLineSmooth: false,\n          showLegend: true,\n          yAxisSplitNum: 3,\n          yAxisShowSplitLine: true,\n          yAxisLabelWidth: 60\n        }, $scope.options);\n        var data = $echarts.splitInitialData(use.data || $scope.data, use.maxDataNum);\n        if (!use.seriesNames) {\n          console.warn('Series names are NOT defined.');\n          use.seriesNames = data.older[0].y.map(function(_, i) {\n            return 'Series ' + (i + 1);\n          });\n        }\n        var colors = $echarts.colorPalette(use.seriesNames.length);\n        var borderLineStyle = {\n          lineStyle: {\n            width: 1,\n            color: '#ddd'\n          }\n        };\n        use.showAllSymbol = use.showAllSymbol || (use.xAxisType === 'time');\n        use.stacked = use.stacked && (use.xAxisType !== 'time');\n        var options = {\n          height: use.height,\n          width: use.width,\n          tooltip: $echarts.tooltip({\n            guideLineColor: 'rgb(235,235,235)',\n            formatter: use.tooltipFormatter || $echarts\n              .tooltipAllSeriesFormatter(use.valueFormatter)\n          }),\n          dataZoom: {show: false},\n          grid: angular.merge({\n            borderWidth: 0, x: use.yAxisLabelWidth, y: 20, x2: 5, y2: 23\n          }, use.grid),\n          xAxis: [{\n            type: use.xAxisType,\n            boundaryGap: false,\n            axisLine: borderLineStyle,\n            axisTick: borderLineStyle,\n            axisLabel: {show: true},\n            splitLine: false\n          }],\n          yAxis: [{\n            splitNumber: use.yAxisSplitNum,\n            splitLine: {show: use.yAxisShowSplitLine},\n            axisLine: false,\n            axisLabel: {formatter: use.yAxisLabelFormatter},\n            scale: use.scale\n          }],\n          series: [],\n          color: use.seriesNames.map(function(_, i) {\n            return colors[i % colors.length].line;\n          }),\n          xAxisDataNum: use.maxDataNum,\n          dataPointsQueue: data.newer\n        };\n        angular.forEach(use.seriesNames, function(name, i) {\n          options.series.push(\n            $echarts.makeDataSeries({\n              name: name,\n              colors: colors[i % colors.length],\n              stack: use.seriesStacked,\n              smooth: use.seriesLineSmooth,\n              showAllSymbol: use.showAllSymbol\n            })\n          );\n        });\n        $echarts.fillAxisData(options, data.older);\n        if (use.xAxisType === 'time') {\n          options.tooltip = $echarts.timelineTooltip(use.valueFormatter);\n        }\n        if (options.series.length === 1) {\n          options.yAxis.boundaryGap = [0, 0.15];\n        }\n        var titleHeight = 20;\n        var legendHeight = 16;\n        if (use.title) {\n          options.title = {\n            text: use.title,\n            x: 0,\n            y: 3\n          };\n          options.grid.y += titleHeight;\n        }\n        var addLegend = options.series.length > 1 && use.showLegend;\n        if (addLegend) {\n          options.legend = {\n            show: true,\n            itemWidth: 8,\n            data: []\n          };\n          angular.forEach(options.series, function(series) {\n            options.legend.data.push(series.name);\n          });\n          options.legend.y = 6;\n          if (use.title) {\n            options.legend.y += titleHeight;\n            options.grid.y += legendHeight;\n          }\n        }\n        if (addLegend || use.title) {\n          options.grid.y += 12;\n        }\n        $scope.echartOptions = options;\n      }]\n    };\n  })\n;\nangular.module('dashing.charts.metrics-sparkline', [\n  'dashing.charts.sparkline',\n  'dashing.metrics'\n])\n  .directive('metricsSparklineChartTd', function() {\n    return {\n      restrict: 'E',\n      templateUrl: 'charts/metrics-sparkline-td.html',\n      scope: {\n        caption: '@',\n        help: '@',\n        current: '@',\n        unit: '@',\n        subText: '@',\n        options: '=optionsBind',\n        data: '=datasourceBind'\n      }\n    };\n  })\n;\nangular.module('dashing.charts.ring', [\n  'dashing.charts.echarts'\n])\n  .directive('ringChart', function() {\n    return {\n      restrict: 'E',\n      template: '<echart options=\"::echartOptions\"></echart>',\n      scope: {\n        options: '=optionsBind',\n        data: '=datasourceBind'\n      },\n      link: function(scope) {\n        var echartScope = scope.$$childHead;\n        scope.$watch('data', function(data) {\n          echartScope.setOptions({\n            series: [{\n              data: [\n                {value: data.available.value},\n                {value: data.used.value}\n              ]\n            }]\n          });\n        });\n      },\n      controller: ['$scope', '$echarts', function($scope, $echarts) {\n        var use = angular.merge({\n          color: 'rgb(35,183,229)',\n          textPosition: 'inner'\n        }, $scope.options);\n        var data = use.data || $scope.data;\n        if (!data) {\n          console.warn('Need data to render the ring pie chart.');\n        }\n        var colors = $echarts.buildColorStates(use.color);\n        var padding = 8;\n        var outerRadius = (parseInt(use.height) - 30 - padding * 2) / 2;\n        var itemStyleBase = {\n          normal: {\n            color: 'rgb(232,239,240)',\n            label: {show: use.textPosition === 'inner', position: 'center'},\n            labelLine: {show: false}\n          }\n        };\n        var options = {\n          height: use.height,\n          width: use.width,\n          grid: {borderWidth: 0},\n          xAxis: [{show: false, data: [0]}],\n          legend: {\n            selectedMode: false,\n            itemGap: 20,\n            itemWidth: 13,\n            y: 'bottom',\n            data: [data.used.label, data.available.label].map(function(label) {\n              return {name: label, textStyle: {fontWeight: 500}, icon: 'a'};\n            })\n          },\n          series: [{\n            type: 'pie',\n            center: ['50%', outerRadius + padding],\n            radius: [Math.floor(outerRadius * 0.74), outerRadius],\n            data: [{\n              name: data.available.label,\n              value: data.available.value,\n              itemStyle: itemStyleBase\n            }, {\n              name: data.used.label,\n              value: data.used.value,\n              itemStyle: angular.merge({}, itemStyleBase, {\n                normal: {color: colors.line}\n              })\n            }]\n          }]\n        };\n        switch (use.textPosition) {\n          case 'inner':\n            options.series[0].itemStyle = {\n              normal: {\n                label: {\n                  formatter: function() {\n                    return Math.round($scope.data.used.value * 100 /\n                        ($scope.data.used.value + $scope.data.available.value)) + '%';\n                  },\n                  textStyle: {\n                    color: '#111',\n                    fontSize: 28,\n                    fontWeight: 500,\n                    baseline: 'middle'\n                  }\n                }\n              }\n            };\n            break;\n          case 'right':\n            if (use.title) {\n              options.series[0].center[0] = outerRadius + padding;\n              options.legend.x = padding;\n              options.title = {\n                text: $scope.data.used.value + ($scope.data.used.unit || ''),\n                subtext: use.title,\n                itemGap: 11,\n                x: (outerRadius + padding) * 2 + padding,\n                y: outerRadius + padding - 40,\n                textStyle: {\n                  fontSize: 40,\n                  fontWeight: 500\n                },\n                subtextStyle: {\n                  fontSize: 14\n                }\n              };\n            }\n            break;\n        }\n        $scope.echartOptions = options;\n      }]\n    };\n  })\n;\nangular.module('dashing.charts.sparkline', [\n  'dashing.charts.echarts'\n])\n  .directive('sparklineChart', function() {\n    return {\n      restrict: 'E',\n      template: '<echart options=\"::echartOptions\"></echart>',\n      scope: {\n        options: '=optionsBind',\n        data: '=datasourceBind'\n      },\n      link: function(scope) {\n        var echartScope = scope.$$childHead;\n        scope.$watch('data', function(data) {\n          if (data) {\n            echartScope.addDataPoints(data);\n          }\n        });\n      },\n      controller: ['$scope', '$echarts', function($scope, $echarts) {\n        var use = $scope.options;\n        var data = $echarts.splitInitialData(use.data || $scope.data, use.maxDataNum);\n        var colors = $echarts.colorPalette(1)[0];\n        use.showAllSymbol = use.showAllSymbol || (use.xAxisType === 'time');\n        use.stacked = use.stacked && (use.xAxisType !== 'time');\n        var options = {\n          height: use.height,\n          width: use.width,\n          tooltip: $echarts.tooltip({\n            formatter: use.tooltipFormatter || $echarts\n              .tooltipFirstSeriesFormatter(use.valueFormatter)\n          }),\n          dataZoom: {show: false},\n          grid: angular.merge({\n            borderWidth: 1, x: 5, y: 5, x2: 5,\n            y2: 1           }, use.grid),\n          xAxis: [{\n            type: use.xAxisType,\n            boundaryGap: false,\n            axisLabel: false,\n            splitLine: false\n          }],\n          yAxis: [{\n            boundaryGap: [0, 0.15],\n            show: false,\n            scale: use.scale\n          }],\n          series: [$echarts.makeDataSeries({\n            colors: colors,\n            stack: true           })],\n          xAxisDataNum: use.maxDataNum,\n          dataPointsQueue: data.newer\n        };\n        $echarts.fillAxisData(options, data.older);\n        if (use.xAxisType === 'time') {\n          options.tooltip = $echarts.timelineTooltip(use.valueFormatter);\n          options.series[0].showAllSymbol = true;\n          options.series[0].stack = false;\n        }\n        $scope.echartOptions = options;\n      }]\n    };\n  })\n;\nangular.module('dashing.contextmenu', [\n  'mgcrea.ngStrap.dropdown'\n])\n  .factory('$contextmenu', function() {\n    return {\n      popup: function(elem, position) {\n        var elem0 = angular.element(elem);\n        elem0.css({left: position.x + 'px', top: position.y + 'px'});\n        elem0.triggerHandler('click');\n      }\n    };\n  })\n;\nangular.module('dashing.filters.duration', [])\n  .filter('duration', function() {\n    return function(millis, compact) {\n      var x = parseInt(millis, 10);\n      if (isNaN(x)) {\n        return millis;\n      }\n      var units = [\n        {label: ' ms', mod: 1000},\n        {label: compact ? 's' : ' secs', mod: 60},\n        {label: compact ? 'm' : ' mins', mod: 60},\n        {label: compact ? 'h' : ' hours', mod: 24},\n        {label: compact ? 'd' : ' days', mod: 7},\n        {label: compact ? 'w' : ' weeks', mod: 52}\n      ];\n      var duration = [];\n      for (var i = 0; i < units.length; i++) {\n        var unit = units[i];\n        var t = x % unit.mod;\n        if (t !== 0) {\n          duration.unshift({label: unit.label, value: t});\n        }\n        x = (x - t) / unit.mod;\n      }\n      duration = duration.slice(0, 2);\n      if (duration.length > 1 && duration[1].label === ' ms') {\n        duration = [duration[0]];\n      }\n      return duration.map(function(unit) {\n        return unit.value + unit.label;\n      }).join(compact ? ' ' : ' and ');\n    };\n  })\n;\nangular.module('dashing.forms.searchbox', [\n])\n  .directive('searchbox', function() {\n    return {\n      restrict: 'E',\n      templateUrl: 'forms/searchbox.html',\n      scope: {\n        placeholder: '@',\n        ngModel: '='\n      }\n    };\n  })\n;\nangular.module('dashing.metrics', [])\n  .directive('metrics', function() {\n    return {\n      restrict: 'E',\n      templateUrl: 'metrics/metrics.html',\n      scope: {\n        caption: '@',\n        help: '@',\n        value: '@',\n        unit: '@',\n        subText: '@'\n      }\n    };\n  })\n;\nangular.module('dashing.progressbar', [])\n  .directive('progressbar', function() {\n    return {\n      restrict: 'E',\n      templateUrl: 'progressbar/progressbar.html',\n      scope: {\n        current: '@',\n        max: '@',\n        colorMapperFn: '='\n      },\n      link: function(scope, elem, attrs) {\n        attrs.$observe('current', function(current) {\n          updateUsageAndClass(Number(current), Number(attrs.max));\n        });\n        attrs.$observe('max', function(max) {\n          updateUsageAndClass(Number(attrs.current), Number(max));\n        });\n        function updateUsageAndClass(current, max) {\n          scope.usage = max > 0 ? Math.round(current * 100 / max) : -1;\n          scope.usageClass = (scope.colorMapperFn ?\n            scope.colorMapperFn : defaultColorMapperFn)(scope.usage);\n        }\n        function defaultColorMapperFn(usage) {\n          return 'progress-bar-' +\n            (usage < 50 ? 'info' : (usage < 75 ? 'warning' : 'danger'));\n        }\n      }\n    };\n  })\n;\nangular.module('dashing.property.bytes', [\n  'dashing.util'\n])\n  .directive('bytes', ['$util', function($util) {\n    return {\n      restrict: 'E',\n      templateUrl: 'property/bytes.html',\n      scope: {\n        raw: '@'\n      },\n      link: function(scope, elem, attrs) {\n        attrs.$observe('raw', function(raw) {\n          if (['true', '1'].indexOf(attrs['readable']) !== -1) {\n            var hr = $util.toHumanReadable(Number(raw), 1024);\n            scope.value = hr.value;\n            scope.unit = hr.modifier + attrs.unit;\n          } else {\n            scope.unit = attrs.unit;\n          }\n        });\n      }\n    };\n  }])\n;\nangular.module('dashing.property', [\n  'mgcrea.ngStrap.tooltip'\n])\n  .directive('property', function() {\n    return {\n      restrict: 'E',\n      templateUrl: 'property/property.html',\n      replace: false,\n      scope: {\n        value: '=valueBind',\n        renderer: '@'\n      },\n      controller: ['$scope', function($scope) {\n        $scope.$watch('value', function(value) {\n          if (value) {\n            switch ($scope.renderer) {\n              case 'Link':\n                if (!value.href) {\n                  $scope.href = value.text;\n                }\n                break;\n              case 'Button':\n                if (value.href && !value.click) {\n                  $scope.click = function() {\n                    location.href = value.href;\n                  };\n                }\n                break;\n              case 'Bytes':\n                if (!value.hasOwnProperty('raw')) {\n                  $scope.raw = value;\n                  return;\n                }\n                break;\n            }\n            if (angular.isObject(value)) {\n              if (value.hasOwnProperty('value')) {\n                console.warn({message: 'Ignore `value.value`, because it is a reversed field.', object: value});\n                delete value.value;\n              }\n              angular.merge($scope, value);\n            }\n          }\n        });\n      }]\n    };\n  })\n    .constant('PROPERTY_RENDERER', {\n    BUTTON: 'Button',\n    BYTES: 'Bytes',\n    DATETIME: 'DateTime',\n    DURATION: 'Duration',\n    INDICATOR: 'Indicator',\n    LINK: 'Link',\n    NUMBER: 'Number',\n    PROGRESS_BAR: 'ProgressBar',\n    TAG: 'Tag',\n    TEXT: undefined   })\n;\nangular.module('dashing.remark', [\n  'mgcrea.ngStrap.tooltip'\n])\n  .directive('remark', function() {\n    return {\n      restrict: 'E',\n      templateUrl: 'remark/remark.html',\n      scope: {\n        tooltip: '@'\n      },\n      link: function(scope, elem, attrs) {\n        switch (attrs.type) {\n          case 'info':\n            scope.fontClass = 'glyphicon glyphicon-info-sign';\n            break;\n          case 'warning':\n            scope.fontClass = 'glyphicon glyphicon-exclamation-sign';\n            break;\n          default:\n            scope.fontClass = 'glyphicon glyphicon-question-sign';\n            break;\n        }\n      }\n    };\n  })\n;\nangular.module('dashing.state.indicator', [\n  'dashing.util',\n  'mgcrea.ngStrap.tooltip'\n])\n  .directive('indicator', ['$util', function($util) {\n    return {\n      restrict: 'E',\n      templateUrl: 'state/indicator.html',\n      scope: {\n        tooltip: '@',\n        shape: '@'\n      },\n      link: function(scope, elem, attrs) {\n        if (!attrs.condition) {\n          attrs.condition = '';\n        }\n                attrs.$observe('condition', function(condition) {\n          scope.colorStyle = $util.conditionToColor(condition);\n        });\n                attrs.$observe('tooltip', function(tooltip) {\n          scope.cursorStyle = tooltip ? 'pointer' : 'default';\n        });\n      }\n    };\n  }])\n;\nangular.module('dashing.state.tag', [\n  'dashing.util',\n  'mgcrea.ngStrap.tooltip'\n])\n  .directive('tag', ['$util', function($util) {\n    return {\n      restrict: 'E',\n      templateUrl: 'state/tag.html',\n      scope: {\n        href: '@',\n        text: '@',\n        tooltip: '@'\n      },\n      link: function(scope, elem, attrs) {\n        if (!attrs.condition) {\n          attrs.condition = '';\n        }\n                attrs.$observe('condition', function(condition) {\n          scope.labelColorClass = $util.conditionToBootstrapLabelClass(condition);\n        });\n                attrs.$observe('tooltip', function(tooltip) {\n          if (!scope.href) {\n            scope.cursorStyle = tooltip ? 'pointer' : 'default';\n          }\n        });\n      }\n    };\n  }])\n;\nangular.module('dashing.tables.property-table.builder', [])\n  .factory('$propertyTableBuilder', ['PROPERTY_RENDERER',\n    function(PROPERTY_RENDERER) {\n      var PB = function(renderer, title) {\n        this.props = renderer ? {renderer: renderer} : {};\n        if (title) {\n          this.title(title);\n        }\n      };\n      PB.prototype.title = function(title) {\n        this.props.name = title;\n        return this;\n      };\n      PB.prototype.help = function(help) {\n        this.props.help = help;\n        return this;\n      };\n      PB.prototype.value = function(value) {\n        this.props.value = value;\n        return this;\n      };\n      PB.prototype.values = function(values) {\n        if (!Array.isArray(values)) {\n          console.warn('values must be an array');\n          values = [values];\n        }\n        this.props.values = values;\n        return this;\n      };\n      PB.prototype.done = function() {\n        return this.props;\n      };\n      return {\n        button: function(title) {\n          return new PB(PROPERTY_RENDERER.BUTTON, title);\n        },\n        bytes: function(title) {\n          return new PB(PROPERTY_RENDERER.BYTES, title);\n        },\n        datetime: function(title) {\n          return new PB(PROPERTY_RENDERER.DATETIME, title);\n        },\n        duration: function(title) {\n          return new PB(PROPERTY_RENDERER.DURATION, title);\n        },\n        indicator: function(title) {\n          return new PB(PROPERTY_RENDERER.INDICATOR, title);\n        },\n        link: function(title) {\n          return new PB(PROPERTY_RENDERER.LINK, title);\n        },\n        number: function(title) {\n          return new PB(PROPERTY_RENDERER.NUMBER, title);\n        },\n        progressbar: function(title) {\n          return new PB(PROPERTY_RENDERER.PROGRESS_BAR, title);\n        },\n        tag: function(title) {\n          return new PB(PROPERTY_RENDERER.TAG, title);\n        },\n        text: function(title) {\n          return new PB(PROPERTY_RENDERER.TEXT, title);\n        },\n                $update: function(table, values) {\n          angular.forEach(values, function(value, key) {\n            table[key][Array.isArray(value) ? 'values' : 'value'] = value;\n          });\n        }\n      };\n    }])\n;\nangular.module('dashing.tables.property-table', [])\n  .directive('propertyTable', function() {\n    return {\n      restrict: 'E',\n      templateUrl: 'tables/property-table/property-table.html',\n      scope: {\n        caption: '@',\n        props: '=propsBind',\n        propNameClass: '@',\n        propValueClass: '@'\n      }\n    };\n  })\n;\nangular.module('dashing.tables.sortable-table.builder', [\n  'dashing.property'\n])\n  .factory('$sortableTableBuilder', ['PROPERTY_RENDERER',\n    function(PROPERTY_RENDERER) {\n      var CB = function(renderer, title) {\n        this.props = renderer ? {renderer: renderer} : {};\n        if (title) {\n          this.title(title);\n        }\n      };\n      CB.prototype.title = function(title) {\n        this.props.name = title;\n        return this;\n      };\n      CB.prototype.key = function(key) {\n        this.props.key = key;\n        return this;\n      };\n      CB.prototype.canSort = function(overrideSortKey) {\n        if (!overrideSortKey && !this.props.key) {\n          console.warn('Specify a sort key or define column key first!');\n          return;\n        }\n        this.props.sortKey = overrideSortKey || this.props.key;\n        if (this.props.sortKey === this.props.key) {\n          switch (this.props.renderer) {\n            case PROPERTY_RENDERER.LINK:\n              this.props.sortKey += '.text';\n              break;\n            case PROPERTY_RENDERER.INDICATOR:\n            case PROPERTY_RENDERER.TAG:\n              this.props.sortKey += '.condition';\n              break;\n            case PROPERTY_RENDERER.PROGRESS_BAR:\n              this.props.sortKey += '.usage';\n              break;\n            case PROPERTY_RENDERER.BYTES:\n              this.props.sortKey += '.raw';\n              break;\n            case PROPERTY_RENDERER.BUTTON:\n              console.warn('\"%s\" column is not sortable.');\n              return;\n            default:\n          }\n        }\n        return this;\n      };\n      CB.prototype.sortDefault = function(descent) {\n        if (!this.props.sortKey) {\n          console.warn('Specify a sort key or define column key first!');\n          return;\n        }\n        this.props.defaultSort = descent ? 'reverse' : true;\n        return this;\n      };\n      CB.prototype.sortDefaultDescent = function() {\n        return this.sortDefault(true);\n      };\n      CB.prototype.styleClass = function(styleClass) {\n        this.props.styleClass = styleClass;\n        return this;\n      };\n      CB.prototype.sortBy = function(sortKey) {\n        this.props.sortKey = sortKey;\n        return this;\n      };\n      CB.prototype.unit = function(unit) {\n        this.props.unit = unit;\n        return this;\n      };\n      CB.prototype.help = function(help) {\n        this.props.help = help;\n        return this;\n      };\n      CB.prototype.done = function() {\n        return this.props;\n      };\n      return {\n        button: function(title) {\n          return new CB(PROPERTY_RENDERER.BUTTON, title);\n        },\n        bytes: function(title) {\n          return new CB(PROPERTY_RENDERER.BYTES, title);\n        },\n        datetime: function(title) {\n          return new CB(PROPERTY_RENDERER.DATETIME, title);\n        },\n        duration: function(title) {\n          return new CB(PROPERTY_RENDERER.DURATION, title);\n        },\n        indicator: function(title) {\n          return new CB(PROPERTY_RENDERER.INDICATOR, title);\n        },\n        link: function(title) {\n          return new CB(PROPERTY_RENDERER.LINK, title);\n        },\n        multiple: function(title, renderers) {\n          return new CB(renderers, title);\n        },\n        number: function(title) {\n          return new CB(PROPERTY_RENDERER.NUMBER, title);\n        },\n        progressbar: function(title) {\n          return new CB(PROPERTY_RENDERER.PROGRESS_BAR, title);\n        },\n        tag: function(title) {\n          return new CB(PROPERTY_RENDERER.TAG, title);\n        },\n        text: function(title) {\n          return new CB(PROPERTY_RENDERER.TEXT, title);\n        },\n                $check: function(cols, model) {\n          angular.forEach(cols, function(col) {\n            var keys = Array.isArray(col.key) ? col.key : [col.key];\n            angular.forEach(keys, function(key) {\n              if (!model.hasOwnProperty(key)) {\n                console.warn('Model does not have a property matches column key `' + col + '`.');\n              }\n            });\n          });\n        }\n      };\n    }])\n;\nangular.module('dashing.tables.sortable-table', [\n  'smart-table'\n])\n  .directive('sortableTable', function() {\n    return {\n      restrict: 'E',\n      templateUrl: 'tables/sortable-table/sortable-table.html',\n      scope: {\n        caption: '@',\n        pagination: '@',\n        columns: '=columnsBind',\n        records: '=recordsBind',\n        search: '=searchBind'\n      },\n      link: function(scope, elem) {\n        var searchControl = elem.find('input')[0];\n        scope.$watch('search', function(val) {\n          searchControl.value = val || '';\n          angular.element(searchControl).triggerHandler('input');\n        });\n        scope.$watch('columns', function(columns) {\n          if (!Array.isArray(columns)) {\n            console.warn('Failed to create table, until columns are defined.');\n            return;\n          }\n          scope.columnStyleClass = columns.map(function(column) {\n            function addStyleClass(dest, clazz, condition) {\n              if (condition) {\n                dest.push(clazz);\n              }\n            }\n            var array = [];\n            addStyleClass(array, column.styleClass, column.styleClass !== undefined);\n            addStyleClass(array, 'text-right', 'Number' === column.renderer);\n            addStyleClass(array, 'text-nowrap', Array.isArray(column.key) && !column.vertical);\n            return array.join(' ');\n          });\n          scope.multipleRendererColumnsRenderers = columns.map(function(column) {\n            if (!Array.isArray(column.key)) {\n              return null;\n            }\n            if (Array.isArray(column.renderer)) {\n              if (column.renderer.length !== column.key.length) {\n                console.warn('Every column key should have a renderer, or share one renderer.');\n              }\n              return column.renderer;\n            }\n            return column.key.map(function() {\n              return column.renderer;\n            });\n          });\n        });\n        scope.isArray = Array.isArray;\n      }\n    };\n  })\n  .directive('stSummary', function() {\n    return {\n      require: '^stTable',\n      template: 'Showing {{ stRange.from }}-{{ stRange.to }} of {{ totalItemCount }} records',\n      link: function(scope, element, attrs, stTable) {\n        scope.stRange = {\n          from: null,\n          to: null\n        };\n        scope.$watch('currentPage', function() {\n          var pagination = stTable.tableState().pagination;\n          scope.stRange.from = pagination.start + 1;\n          scope.stRange.to = scope.currentPage === pagination.numberOfPages ?\n            pagination.totalItemCount : (scope.stRange.from + scope.stItemsByPage - 1);\n        });\n      }\n    };\n  })\n  .config(['stConfig', function(stConfig) {\n    stConfig.sort.skipNatural = true;\n  }])\n;\nangular.module('dashing.tabset', [])\n  .directive('tabset', [function() {\n    return {\n      restrict: 'E',\n      templateUrl: 'tabset/tabset.html',\n      transclude: true,\n      scope: true,\n      controller: ['$scope', function($scope) {\n        var tabs = $scope.tabs = [];\n        function select(tab, reload) {\n          angular.forEach(tabs, function(item) {\n            item.selected = item === tab;\n          });\n          if (tab.load !== undefined) {\n            tab.load(reload);\n          }\n        }\n        this.addTab = function(tab) {\n          tabs.push(tab);\n          if (tabs.length === 1) {\n            select(tab);\n          }\n        };\n        $scope.selectTab = function(activeTabIndex, reload) {\n          if (activeTabIndex >= 0 && activeTabIndex < tabs.length) {\n            select(tabs[activeTabIndex], reload);\n          }\n        };\n      }]\n    };\n  }])\n  .directive('tab', ['$http', '$controller', '$compile',\n    function($http, $controller, $compile) {\n      return {\n        restrict: 'E',\n        require: '^tabset',\n        template: '<div class=\"tab-pane\" ng-class=\"{active:selected}\" ng-transclude></div>',\n        replace: true,\n        transclude: true,\n        link: function(scope, elem, attrs, ctrl) {\n          scope.heading = attrs.heading;\n          scope.loaded = false;\n          scope.load = function(reload) {\n            if (scope.loaded && !reload) {\n              return;\n            }\n            if (attrs.template) {\n              $http.get(attrs.template).then(function(response) {\n                createTemplateScope(response.data);\n              });\n            }\n          };\n          function createTemplateScope(template) {\n            elem.html(template);\n            var templateScope = scope.$new(false);\n            if (attrs.controller) {\n              var scopeController = $controller(attrs.controller, {$scope: templateScope});\n              elem.children().data('$ngController', scopeController);\n            }\n            $compile(elem.contents())(templateScope);\n            scope.loaded = true;\n          }\n          ctrl.addTab(scope);\n        }\n      };\n    }])\n;\nangular.module('dashing.util', [])\n  .factory('$util', function() {\n    return {\n            conditionToBootstrapLabelClass: function(condition) {\n        switch (condition) {\n          case 'good':\n            return 'label-success';\n          case 'concern':\n            return 'label-warning';\n          case 'danger':\n            return 'label-danger';\n          default:\n            return 'label-default';\n        }\n      },\n            conditionToColor: function(condition) {\n        switch (condition) {\n          case 'good':\n            return '#5cb85c';\n          case 'concern':\n            return '#f0ad4e';\n          case 'danger':\n            return '#d9534f';\n          default:\n            return '#aaa';\n        }\n      },\n            colorPalette: function(num) {\n        var COLORS = {\n          blue: 'rgb(0,119,215)',\n          purple: 'rgb(110,119,215)',\n          green: 'rgb(41,189,181)',\n          darkRed: 'rgb(212,102,138)',\n          orange: 'rgb(255,127,80)'\n        };\n        switch (num) {\n          case 1:\n            return [COLORS.blue];\n          case 2:\n            return [COLORS.blue, COLORS.green];\n          default:\n            return Object.keys(COLORS).map(function(key) {\n              return COLORS[key];\n            });\n        }\n      },\n            toHumanReadable: function(value, base) {\n        var modifier = '';\n        if (value !== 0) {\n          if (base !== 1024) {\n            base = 1000;\n          }\n          var positive = value > 0;\n          var positiveValue = Math.abs(value);\n          var s = ['', 'K', 'M', 'G', 'T', 'P', 'E', 'Z', 'Y'];\n          var e = Math.floor(Math.log(positiveValue) / Math.log(base));\n          value = Math.floor(positiveValue / Math.pow(base, e));\n          if (!positive) {\n            value *= -1;\n          }\n          modifier = s[e];\n        }\n        return {value: value, modifier: modifier};\n      }\n    };\n  })\n;\n})(window, document);"],"sourceRoot":"/source/"}